<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="790" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="773.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="773.00"> </text><svg id="frames" x="10" width="1180" total_samples="703"><g><title>`0x7FFD4029BF00 (1 samples, 0.14%)</title><rect x="0.0000%" y="725" width="0.1422%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="735.50"></text></g><g><title>RustyPython.exe`RustyPython::builtins::structure::pyobject::impl$6::clone(enum2$ (11 samples, 1.56%)</title><rect x="3.8407%" y="421" width="1.5647%" height="15" fill="rgb(217,0,24)" fg:x="27" fg:w="11"/><text x="4.0907%" y="431.50"></text></g><g><title>RustyPython.exe`alloc::rc::Weak&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyImmutableObject&gt;,ref$&lt;alloc::alloc::Global&gt; &gt;::inner (1 samples, 0.14%)</title><rect x="5.8321%" y="373" width="0.1422%" height="15" fill="rgb(221,193,54)" fg:x="41" fg:w="1"/><text x="6.0821%" y="383.50"></text></g><g><title>RustyPython.exe`alloc::rc::is_dangling(alloc::rc::RcInner&lt;enum2$ (1 samples, 0.14%)</title><rect x="5.8321%" y="357" width="0.1422%" height="15" fill="rgb(248,212,6)" fg:x="41" fg:w="1"/><text x="6.0821%" y="367.50"></text></g><g><title>RustyPython.exe`alloc::rc::Rc&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyImmutableObject&gt;,alloc::alloc::Global&gt;::drop_slow&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyImmutableObject&gt;,alloc::alloc::Global&gt; (6 samples, 0.85%)</title><rect x="5.4054%" y="421" width="0.8535%" height="15" fill="rgb(208,68,35)" fg:x="38" fg:w="6"/><text x="5.6554%" y="431.50"></text></g><g><title>RustyPython.exe`core::ptr::drop_in_place(alloc::rc::Weak&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyImmutableObject&gt;,ref$ (5 samples, 0.71%)</title><rect x="5.5477%" y="405" width="0.7112%" height="15" fill="rgb(232,128,0)" fg:x="39" fg:w="5"/><text x="5.7977%" y="415.50"></text></g><g><title>RustyPython.exe`alloc::rc::impl$71::drop(alloc::rc::Weak&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyImmutableObject&gt;,ref$ (5 samples, 0.71%)</title><rect x="5.5477%" y="389" width="0.7112%" height="15" fill="rgb(207,160,47)" fg:x="39" fg:w="5"/><text x="5.7977%" y="399.50"></text></g><g><title>RustyPython.exe`core::alloc::impl$2::deallocate(alloc::alloc::Global**, core::ptr::non_null::NonNull (2 samples, 0.28%)</title><rect x="5.9744%" y="373" width="0.2845%" height="15" fill="rgb(228,23,34)" fg:x="42" fg:w="2"/><text x="6.2244%" y="383.50"></text></g><g><title>RustyPython.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (2 samples, 0.28%)</title><rect x="5.9744%" y="357" width="0.2845%" height="15" fill="rgb(218,30,26)" fg:x="42" fg:w="2"/><text x="6.2244%" y="367.50"></text></g><g><title>RustyPython.exe`alloc::alloc::dealloc (2 samples, 0.28%)</title><rect x="5.9744%" y="341" width="0.2845%" height="15" fill="rgb(220,122,19)" fg:x="42" fg:w="2"/><text x="6.2244%" y="351.50"></text></g><g><title>RustyPython.exe`core::ptr::drop_in_place(enum2$ (11 samples, 1.56%)</title><rect x="6.2589%" y="421" width="1.5647%" height="15" fill="rgb(250,228,42)" fg:x="44" fg:w="11"/><text x="6.5089%" y="431.50"></text></g><g><title>RustyPython.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option&lt;enum2$ (8 samples, 1.14%)</title><rect x="7.8236%" y="421" width="1.1380%" height="15" fill="rgb(240,193,28)" fg:x="55" fg:w="8"/><text x="8.0736%" y="431.50"></text></g><g><title>RustyPython.exe`core::ptr::drop_in_place&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt; &gt;(enum2$ (6 samples, 0.85%)</title><rect x="8.1081%" y="405" width="0.8535%" height="15" fill="rgb(216,20,37)" fg:x="57" fg:w="6"/><text x="8.3581%" y="415.50"></text></g><g><title>RustyPython.exe`RustyPython::builtins::structure::pyinstance::impl$5::downcast_mut(ref_mut$&lt;dyn$ (5 samples, 0.71%)</title><rect x="12.2333%" y="325" width="0.7112%" height="15" fill="rgb(206,188,39)" fg:x="86" fg:w="5"/><text x="12.4833%" y="335.50"></text></g><g><title>RustyPython.exe`RustyPython::builtins::structure::pyinstance::impl$5::is(ref$&lt;dyn$ (5 samples, 0.71%)</title><rect x="12.2333%" y="309" width="0.7112%" height="15" fill="rgb(217,207,13)" fg:x="86" fg:w="5"/><text x="12.4833%" y="319.50"></text></g><g><title>RustyPython.exe`core::any::impl$7::eq (5 samples, 0.71%)</title><rect x="12.2333%" y="293" width="0.7112%" height="15" fill="rgb(231,73,38)" fg:x="86" fg:w="5"/><text x="12.4833%" y="303.50"></text></g><g><title>RustyPython.exe`core::tuple::impl$10::eq(tuple$&lt;u64,u64&gt;*, tuple$ (5 samples, 0.71%)</title><rect x="12.2333%" y="277" width="0.7112%" height="15" fill="rgb(225,20,46)" fg:x="86" fg:w="5"/><text x="12.4833%" y="287.50"></text></g><g><title>RustyPython.exe`core::cmp::impls::impl$25::eq (5 samples, 0.71%)</title><rect x="12.2333%" y="261" width="0.7112%" height="15" fill="rgb(210,31,41)" fg:x="86" fg:w="5"/><text x="12.4833%" y="271.50"></text></g><g><title>RustyPython.exe`mopa::impl$0::get_type_id&lt;RustyPython::builtins::types::range::RangeIteratorInstance&gt; (5 samples, 0.71%)</title><rect x="12.2333%" y="245" width="0.7112%" height="15" fill="rgb(221,200,47)" fg:x="86" fg:w="5"/><text x="12.4833%" y="255.50"></text></g><g><title>RustyPython.exe`enum2$&lt;RustyPython::builtins::structure::pyobject::PyMutableObject&gt;::expect_instance_mut (1 samples, 0.14%)</title><rect x="12.9445%" y="325" width="0.1422%" height="15" fill="rgb(226,26,5)" fg:x="91" fg:w="1"/><text x="13.1945%" y="335.50"></text></g><g><title>RustyPython.exe`enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt;::expect_mutable (1 samples, 0.14%)</title><rect x="13.0868%" y="325" width="0.1422%" height="15" fill="rgb(249,33,26)" fg:x="92" fg:w="1"/><text x="13.3368%" y="335.50"></text></g><g><title>RustyPython.exe`__rust_alloc (2 samples, 0.28%)</title><rect x="13.5135%" y="261" width="0.2845%" height="15" fill="rgb(235,183,28)" fg:x="95" fg:w="2"/><text x="13.7635%" y="271.50"></text></g><g><title>RustyPython.exe`std::sys::alloc::windows::process_heap_alloc (9 samples, 1.28%)</title><rect x="13.7980%" y="261" width="1.2802%" height="15" fill="rgb(221,5,38)" fg:x="97" fg:w="9"/><text x="14.0480%" y="271.50"></text></g><g><title>RustyPython.exe`core::intrinsics::unlikely (4 samples, 0.57%)</title><rect x="14.5092%" y="245" width="0.5690%" height="15" fill="rgb(247,18,42)" fg:x="102" fg:w="4"/><text x="14.7592%" y="255.50"></text></g><g><title>`0x7FFD3E923F90 (4 samples, 0.57%)</title><rect x="14.5092%" y="229" width="0.5690%" height="15" fill="rgb(241,131,45)" fg:x="102" fg:w="4"/><text x="14.7592%" y="239.50"></text></g><g><title>`0x7FFD401FB3AB (2 samples, 0.28%)</title><rect x="15.0782%" y="261" width="0.2845%" height="15" fill="rgb(249,31,29)" fg:x="106" fg:w="2"/><text x="15.3282%" y="271.50"></text></g><g><title>`0x7FFD401FB3C2 (2 samples, 0.28%)</title><rect x="15.3627%" y="261" width="0.2845%" height="15" fill="rgb(225,111,53)" fg:x="108" fg:w="2"/><text x="15.6127%" y="271.50"></text></g><g><title>`0x7FFD401FBE7F (1 samples, 0.14%)</title><rect x="15.6472%" y="261" width="0.1422%" height="15" fill="rgb(238,160,17)" fg:x="110" fg:w="1"/><text x="15.8972%" y="271.50"></text></g><g><title>`0x7FFD401FBEE0 (3 samples, 0.43%)</title><rect x="15.7895%" y="245" width="0.4267%" height="15" fill="rgb(214,148,48)" fg:x="111" fg:w="3"/><text x="16.0395%" y="255.50"></text></g><g><title>`0x7FFD401FBEF7 (1 samples, 0.14%)</title><rect x="16.2162%" y="245" width="0.1422%" height="15" fill="rgb(232,36,49)" fg:x="114" fg:w="1"/><text x="16.4662%" y="255.50"></text></g><g><title>`0x7FFD401FBF1A (1 samples, 0.14%)</title><rect x="16.3585%" y="245" width="0.1422%" height="15" fill="rgb(209,103,24)" fg:x="115" fg:w="1"/><text x="16.6085%" y="255.50"></text></g><g><title>`0x7FFD401FBF3F (2 samples, 0.28%)</title><rect x="16.5007%" y="245" width="0.2845%" height="15" fill="rgb(229,88,8)" fg:x="116" fg:w="2"/><text x="16.7507%" y="255.50"></text></g><g><title>`0x7FFD401FBF8B (1 samples, 0.14%)</title><rect x="16.7852%" y="245" width="0.1422%" height="15" fill="rgb(213,181,19)" fg:x="118" fg:w="1"/><text x="17.0352%" y="255.50"></text></g><g><title>`0x7FFD401FBFB0 (1 samples, 0.14%)</title><rect x="16.9275%" y="245" width="0.1422%" height="15" fill="rgb(254,191,54)" fg:x="119" fg:w="1"/><text x="17.1775%" y="255.50"></text></g><g><title>`0x7FFD401FC590 (5 samples, 0.71%)</title><rect x="17.3542%" y="229" width="0.7112%" height="15" fill="rgb(241,83,37)" fg:x="122" fg:w="5"/><text x="17.6042%" y="239.50"></text></g><g><title>`0x7FFD401FC5A5 (2 samples, 0.28%)</title><rect x="18.0654%" y="229" width="0.2845%" height="15" fill="rgb(233,36,39)" fg:x="127" fg:w="2"/><text x="18.3154%" y="239.50"></text></g><g><title>`0x7FFD401FC5EC (4 samples, 0.57%)</title><rect x="18.3499%" y="229" width="0.5690%" height="15" fill="rgb(226,3,54)" fg:x="129" fg:w="4"/><text x="18.5999%" y="239.50"></text></g><g><title>`0x7FFD401FC67D (1 samples, 0.14%)</title><rect x="18.9189%" y="229" width="0.1422%" height="15" fill="rgb(245,192,40)" fg:x="133" fg:w="1"/><text x="19.1689%" y="239.50"></text></g><g><title>`0x7FFD401FC6A8 (3 samples, 0.43%)</title><rect x="19.0612%" y="229" width="0.4267%" height="15" fill="rgb(238,167,29)" fg:x="134" fg:w="3"/><text x="19.3112%" y="239.50"></text></g><g><title>`0x7FFD401FC707 (1 samples, 0.14%)</title><rect x="19.4879%" y="229" width="0.1422%" height="15" fill="rgb(232,182,51)" fg:x="137" fg:w="1"/><text x="19.7379%" y="239.50"></text></g><g><title>`0x7FFD401FC72A (3 samples, 0.43%)</title><rect x="19.6302%" y="229" width="0.4267%" height="15" fill="rgb(231,60,39)" fg:x="138" fg:w="3"/><text x="19.8802%" y="239.50"></text></g><g><title>`0x7FFD401FC74A (1 samples, 0.14%)</title><rect x="20.0569%" y="229" width="0.1422%" height="15" fill="rgb(208,69,12)" fg:x="141" fg:w="1"/><text x="20.3069%" y="239.50"></text></g><g><title>`0x7FFD401FC757 (49 samples, 6.97%)</title><rect x="20.1991%" y="229" width="6.9701%" height="15" fill="rgb(235,93,37)" fg:x="142" fg:w="49"/><text x="20.4491%" y="239.50">`0x7FFD40..</text></g><g><title>`0x7FFD401FC7AC (4 samples, 0.57%)</title><rect x="27.1693%" y="229" width="0.5690%" height="15" fill="rgb(213,116,39)" fg:x="191" fg:w="4"/><text x="27.4193%" y="239.50"></text></g><g><title>`0x7FFD401FC7DE (2 samples, 0.28%)</title><rect x="27.7383%" y="229" width="0.2845%" height="15" fill="rgb(222,207,29)" fg:x="195" fg:w="2"/><text x="27.9883%" y="239.50"></text></g><g><title>`0x7FFD401FC808 (1 samples, 0.14%)</title><rect x="28.0228%" y="229" width="0.1422%" height="15" fill="rgb(206,96,30)" fg:x="197" fg:w="1"/><text x="28.2728%" y="239.50"></text></g><g><title>`0x7FFD401FC82C (2 samples, 0.28%)</title><rect x="28.1650%" y="229" width="0.2845%" height="15" fill="rgb(218,138,4)" fg:x="198" fg:w="2"/><text x="28.4150%" y="239.50"></text></g><g><title>`0x7FFD401FC83E (1 samples, 0.14%)</title><rect x="28.4495%" y="229" width="0.1422%" height="15" fill="rgb(250,191,14)" fg:x="200" fg:w="1"/><text x="28.6995%" y="239.50"></text></g><g><title>`0x7FFD401FC855 (3 samples, 0.43%)</title><rect x="28.5917%" y="229" width="0.4267%" height="15" fill="rgb(239,60,40)" fg:x="201" fg:w="3"/><text x="28.8417%" y="239.50"></text></g><g><title>`0x7FFD401FC878 (1 samples, 0.14%)</title><rect x="29.0185%" y="229" width="0.1422%" height="15" fill="rgb(206,27,48)" fg:x="204" fg:w="1"/><text x="29.2685%" y="239.50"></text></g><g><title>`0x7FFD401FC888 (2 samples, 0.28%)</title><rect x="29.1607%" y="229" width="0.2845%" height="15" fill="rgb(225,35,8)" fg:x="205" fg:w="2"/><text x="29.4107%" y="239.50"></text></g><g><title>`0x7FFD401FC89E (2 samples, 0.28%)</title><rect x="29.4452%" y="229" width="0.2845%" height="15" fill="rgb(250,213,24)" fg:x="207" fg:w="2"/><text x="29.6952%" y="239.50"></text></g><g><title>`0x7FFD401FCCF5 (2 samples, 0.28%)</title><rect x="29.7297%" y="229" width="0.2845%" height="15" fill="rgb(247,123,22)" fg:x="209" fg:w="2"/><text x="29.9797%" y="239.50"></text></g><g><title>`0x7FFD401FCD1F (3 samples, 0.43%)</title><rect x="30.0142%" y="229" width="0.4267%" height="15" fill="rgb(231,138,38)" fg:x="211" fg:w="3"/><text x="30.2642%" y="239.50"></text></g><g><title>`0x7FFD401FBFC4 (95 samples, 13.51%)</title><rect x="17.0697%" y="245" width="13.5135%" height="15" fill="rgb(231,145,46)" fg:x="120" fg:w="95"/><text x="17.3197%" y="255.50">`0x7FFD401FBFC4</text></g><g><title>`0x7FFD401FCD21 (1 samples, 0.14%)</title><rect x="30.4410%" y="229" width="0.1422%" height="15" fill="rgb(251,118,11)" fg:x="214" fg:w="1"/><text x="30.6910%" y="239.50"></text></g><g><title>`0x7FFD401FC071 (2 samples, 0.28%)</title><rect x="30.5832%" y="245" width="0.2845%" height="15" fill="rgb(217,147,25)" fg:x="215" fg:w="2"/><text x="30.8332%" y="255.50"></text></g><g><title>`0x7FFD401FC09F (1 samples, 0.14%)</title><rect x="30.8677%" y="245" width="0.1422%" height="15" fill="rgb(247,81,37)" fg:x="217" fg:w="1"/><text x="31.1177%" y="255.50"></text></g><g><title>RustyPython.exe`core::ops::function::impls::impl$0::call(enum2$&lt;core::result::Result&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt;,RustyPython::builtins::structure::pyexception::PyException&gt; &gt; (***)(RustyPython::pyarena::PyArena*, enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt;*), RustyPython::pyarena::PyArena*, enum2$ (149 samples, 21.19%)</title><rect x="10.0996%" y="373" width="21.1949%" height="15" fill="rgb(209,12,38)" fg:x="71" fg:w="149"/><text x="10.3496%" y="383.50">RustyPython.exe`core::ops::functi..</text></g><g><title>RustyPython.exe`core::ops::function::Fn::call(enum2$&lt;core::result::Result&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt;,RustyPython::builtins::structure::pyexception::PyException&gt; &gt; (**)(RustyPython::pyarena::PyArena*, enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt;*), RustyPython::pyarena::PyArena*, enum2$ (147 samples, 20.91%)</title><rect x="10.3841%" y="357" width="20.9104%" height="15" fill="rgb(227,1,9)" fg:x="73" fg:w="147"/><text x="10.6341%" y="367.50">RustyPython.exe`core::ops::functi..</text></g><g><title>RustyPython.exe`RustyPython::builtins::types::range::range_iterator__next__(RustyPython::pyarena::PyArena*, enum2$ (147 samples, 20.91%)</title><rect x="10.3841%" y="341" width="20.9104%" height="15" fill="rgb(248,47,43)" fg:x="73" fg:w="147"/><text x="10.6341%" y="351.50">RustyPython.exe`RustyPython::buil..</text></g><g><title>RustyPython.exe`enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt;::new_immutable(enum2$ (127 samples, 18.07%)</title><rect x="13.2290%" y="325" width="18.0654%" height="15" fill="rgb(221,10,30)" fg:x="93" fg:w="127"/><text x="13.4790%" y="335.50">RustyPython.exe`enum2$&lt;Rusty..</text></g><g><title>RustyPython.exe`alloc::rc::Rc&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyImmutableObject&gt;,alloc::alloc::Global&gt;::new(enum2$ (127 samples, 18.07%)</title><rect x="13.2290%" y="309" width="18.0654%" height="15" fill="rgb(210,229,1)" fg:x="93" fg:w="127"/><text x="13.4790%" y="319.50">RustyPython.exe`alloc::rc::R..</text></g><g><title>RustyPython.exe`alloc::boxed::impl$0::new(alloc::rc::RcInner&lt;enum2$ (126 samples, 17.92%)</title><rect x="13.3713%" y="293" width="17.9232%" height="15" fill="rgb(222,148,37)" fg:x="94" fg:w="126"/><text x="13.6213%" y="303.50">RustyPython.exe`alloc::boxed..</text></g><g><title>RustyPython.exe`alloc::alloc::exchange_malloc (125 samples, 17.78%)</title><rect x="13.5135%" y="277" width="17.7809%" height="15" fill="rgb(234,67,33)" fg:x="95" fg:w="125"/><text x="13.7635%" y="287.50">RustyPython.exe`alloc::alloc..</text></g><g><title>`0x7FFD401FBE86 (109 samples, 15.50%)</title><rect x="15.7895%" y="261" width="15.5050%" height="15" fill="rgb(247,98,35)" fg:x="111" fg:w="109"/><text x="16.0395%" y="271.50">`0x7FFD401FBE86</text></g><g><title>`0x7FFD401FC0B5 (2 samples, 0.28%)</title><rect x="31.0100%" y="245" width="0.2845%" height="15" fill="rgb(247,138,52)" fg:x="218" fg:w="2"/><text x="31.2600%" y="255.50"></text></g><g><title>RustyPython.exe`RustyPython::builtins::function_utils::call_function(enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt;, ref$&lt;slice2$&lt;enum2$ (158 samples, 22.48%)</title><rect x="8.9616%" y="405" width="22.4751%" height="15" fill="rgb(213,79,30)" fg:x="63" fg:w="158"/><text x="9.2116%" y="415.50">RustyPython.exe`RustyPython::builtin..</text></g><g><title>RustyPython.exe`RustyPython::builtins::function_utils::eval_internal_func(alloc::rc::Rc&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyInternalFunction&gt;,alloc::alloc::Global&gt;, ref$&lt;slice2$&lt;enum2$ (157 samples, 22.33%)</title><rect x="9.1038%" y="389" width="22.3329%" height="15" fill="rgb(246,177,23)" fg:x="64" fg:w="157"/><text x="9.3538%" y="399.50">RustyPython.exe`RustyPython::builti..</text></g><g><title>RustyPython.exe`core::ptr::drop_in_place(alloc::rc::Rc&lt;enum2$ (1 samples, 0.14%)</title><rect x="31.2945%" y="373" width="0.1422%" height="15" fill="rgb(230,62,27)" fg:x="220" fg:w="1"/><text x="31.5445%" y="383.50"></text></g><g><title>RustyPython.exe`alloc::rc::impl$32::drop(alloc::rc::Rc&lt;enum2$ (1 samples, 0.14%)</title><rect x="31.2945%" y="357" width="0.1422%" height="15" fill="rgb(216,154,8)" fg:x="220" fg:w="1"/><text x="31.5445%" y="367.50"></text></g><g><title>RustyPython.exe`alloc::rc::Rc&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyInternalFunction&gt;,alloc::alloc::Global&gt;::inner (1 samples, 0.14%)</title><rect x="31.2945%" y="341" width="0.1422%" height="15" fill="rgb(244,35,45)" fg:x="220" fg:w="1"/><text x="31.5445%" y="351.50"></text></g><g><title>RustyPython.exe`core::cell::Cell&lt;usize&gt;::set (1 samples, 0.14%)</title><rect x="31.2945%" y="325" width="0.1422%" height="15" fill="rgb(251,115,12)" fg:x="220" fg:w="1"/><text x="31.5445%" y="335.50"></text></g><g><title>RustyPython.exe`core::cell::Cell&lt;usize&gt;::replace (1 samples, 0.14%)</title><rect x="31.2945%" y="309" width="0.1422%" height="15" fill="rgb(240,54,50)" fg:x="220" fg:w="1"/><text x="31.5445%" y="319.50"></text></g><g><title>RustyPython.exe`core::mem::replace (1 samples, 0.14%)</title><rect x="31.2945%" y="293" width="0.1422%" height="15" fill="rgb(233,84,52)" fg:x="220" fg:w="1"/><text x="31.5445%" y="303.50"></text></g><g><title>RustyPython.exe`core::ptr::write (1 samples, 0.14%)</title><rect x="31.2945%" y="277" width="0.1422%" height="15" fill="rgb(207,117,47)" fg:x="220" fg:w="1"/><text x="31.5445%" y="287.50"></text></g><g><title>RustyPython.exe`core::ptr::drop_in_place(enum2$&lt;core::result::Result&lt;enum2$ (162 samples, 23.04%)</title><rect x="8.9616%" y="421" width="23.0441%" height="15" fill="rgb(249,43,39)" fg:x="63" fg:w="162"/><text x="9.2116%" y="431.50">RustyPython.exe`core::ptr::drop_in_pl..</text></g><g><title>RustyPython.exe`core::ptr::drop_in_place&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt; &gt;(enum2$ (4 samples, 0.57%)</title><rect x="31.4367%" y="405" width="0.5690%" height="15" fill="rgb(209,38,44)" fg:x="221" fg:w="4"/><text x="31.6867%" y="415.50"></text></g><g><title>RustyPython.exe`core::ptr::drop_in_place&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt; &gt;(enum2$ (3 samples, 0.43%)</title><rect x="32.0057%" y="421" width="0.4267%" height="15" fill="rgb(236,212,23)" fg:x="225" fg:w="3"/><text x="32.2557%" y="431.50"></text></g><g><title>RustyPython.exe`core::ptr::drop_in_place&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt; &gt;(enum2$ (1 samples, 0.14%)</title><rect x="32.4324%" y="357" width="0.1422%" height="15" fill="rgb(242,79,21)" fg:x="228" fg:w="1"/><text x="32.6824%" y="367.50"></text></g><g><title>RustyPython.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;enum2$ (3 samples, 0.43%)</title><rect x="32.4324%" y="421" width="0.4267%" height="15" fill="rgb(211,96,35)" fg:x="228" fg:w="3"/><text x="32.6824%" y="431.50"></text></g><g><title>RustyPython.exe`RustyPython::evaluator::eval_expr(enum2$ (3 samples, 0.43%)</title><rect x="32.4324%" y="405" width="0.4267%" height="15" fill="rgb(253,215,40)" fg:x="228" fg:w="3"/><text x="32.6824%" y="415.50"></text></g><g><title>RustyPython.exe`RustyPython::evaluator::eval_fun_call(enum2$&lt;RustyPython::parser::Expr&gt;**, ref$&lt;slice2$&lt;enum2$ (3 samples, 0.43%)</title><rect x="32.4324%" y="389" width="0.4267%" height="15" fill="rgb(211,81,21)" fg:x="228" fg:w="3"/><text x="32.6824%" y="399.50"></text></g><g><title>RustyPython.exe`RustyPython::builtins::function_utils::eval_obj_init(alloc::rc::Rc&lt;enum2$&lt;RustyPython::builtins::structure::pyclass::PyClass&gt;,alloc::alloc::Global&gt;, ref$&lt;slice2$&lt;enum2$ (3 samples, 0.43%)</title><rect x="32.4324%" y="373" width="0.4267%" height="15" fill="rgb(208,190,38)" fg:x="228" fg:w="3"/><text x="32.6824%" y="383.50"></text></g><g><title>RustyPython.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;enum2$ (2 samples, 0.28%)</title><rect x="32.5747%" y="357" width="0.2845%" height="15" fill="rgb(235,213,38)" fg:x="229" fg:w="2"/><text x="32.8247%" y="367.50"></text></g><g><title>RustyPython.exe`RustyPython::builtins::function_utils::call_function_1_arg_min(enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt;*, enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt;*, ref$&lt;slice2$&lt;enum2$ (2 samples, 0.28%)</title><rect x="32.5747%" y="341" width="0.2845%" height="15" fill="rgb(237,122,38)" fg:x="229" fg:w="2"/><text x="32.8247%" y="351.50"></text></g><g><title>RustyPython.exe`RustyPython::builtins::function_utils::eval_internal_func_1_arg_min(alloc::rc::Rc&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyInternalFunction&gt;,alloc::alloc::Global&gt;*, enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt;*, ref$&lt;slice2$&lt;enum2$ (2 samples, 0.28%)</title><rect x="32.5747%" y="325" width="0.2845%" height="15" fill="rgb(244,218,35)" fg:x="229" fg:w="2"/><text x="32.8247%" y="335.50"></text></g><g><title>RustyPython.exe`RustyPython::builtins::structure::pyobject::impl$6::clone(enum2$ (2 samples, 0.28%)</title><rect x="32.5747%" y="309" width="0.2845%" height="15" fill="rgb(240,68,47)" fg:x="229" fg:w="2"/><text x="32.8247%" y="319.50"></text></g><g><title>RustyPython.exe`alloc::rc::impl$33::clone(alloc::rc::Rc&lt;enum2$ (2 samples, 0.28%)</title><rect x="32.5747%" y="293" width="0.2845%" height="15" fill="rgb(210,16,53)" fg:x="229" fg:w="2"/><text x="32.8247%" y="303.50"></text></g><g><title>RustyPython.exe`alloc::rc::Rc&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyImmutableObject&gt;,alloc::alloc::Global&gt;::inner (2 samples, 0.28%)</title><rect x="32.5747%" y="277" width="0.2845%" height="15" fill="rgb(235,124,12)" fg:x="229" fg:w="2"/><text x="32.8247%" y="287.50"></text></g><g><title>RustyPython.exe`core::ptr::non_null::NonNull&lt;alloc::rc::RcInner&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyImmutableObject&gt; &gt; &gt;::as_ref (2 samples, 0.28%)</title><rect x="32.5747%" y="261" width="0.2845%" height="15" fill="rgb(224,169,11)" fg:x="229" fg:w="2"/><text x="32.8247%" y="271.50"></text></g><g><title>RustyPython.exe`alloc::vec::impl$17::into_iter(alloc::vec::Vec&lt;tuple$&lt;enum2$ (2 samples, 0.28%)</title><rect x="35.4196%" y="373" width="0.2845%" height="15" fill="rgb(250,166,2)" fg:x="249" fg:w="2"/><text x="35.6696%" y="383.50"></text></g><g><title>RustyPython.exe`alloc::vec::impl$8::deref(alloc::vec::Vec&lt;tuple$&lt;enum2$ (2 samples, 0.28%)</title><rect x="35.4196%" y="357" width="0.2845%" height="15" fill="rgb(242,216,29)" fg:x="249" fg:w="2"/><text x="35.6696%" y="367.50"></text></g><g><title>RustyPython.exe`alloc::vec::Vec&lt;tuple$&lt;enum2$&lt;RustyPython::parser::Expr&gt;,RustyPython::parser::CodeBlock&gt;,alloc::alloc::Global&gt;::as_slice (2 samples, 0.28%)</title><rect x="35.4196%" y="341" width="0.2845%" height="15" fill="rgb(230,116,27)" fg:x="249" fg:w="2"/><text x="35.6696%" y="351.50"></text></g><g><title>RustyPython.exe`core::ptr::drop_in_place&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt; &gt;(enum2$ (1 samples, 0.14%)</title><rect x="35.7041%" y="373" width="0.1422%" height="15" fill="rgb(228,99,48)" fg:x="251" fg:w="1"/><text x="35.9541%" y="383.50"></text></g><g><title>RustyPython.exe`RustyPython::builtins::types::pybool::convert_immutable_to_bool(enum2$ (10 samples, 1.42%)</title><rect x="40.8250%" y="341" width="1.4225%" height="15" fill="rgb(253,11,6)" fg:x="287" fg:w="10"/><text x="41.0750%" y="351.50"></text></g><g><title>RustyPython.exe`RustyPython::builtins::types::pybool::convert_pyobj_to_bool(enum2$ (45 samples, 6.40%)</title><rect x="36.2731%" y="357" width="6.4011%" height="15" fill="rgb(247,143,39)" fg:x="255" fg:w="45"/><text x="36.5231%" y="367.50">RustyPyt..</text></g><g><title>RustyPython.exe`alloc::rc::impl$25::deref(alloc::rc::Rc&lt;enum2$ (3 samples, 0.43%)</title><rect x="42.2475%" y="341" width="0.4267%" height="15" fill="rgb(236,97,10)" fg:x="297" fg:w="3"/><text x="42.4975%" y="351.50"></text></g><g><title>RustyPython.exe`alloc::rc::Rc&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyImmutableObject&gt;,alloc::alloc::Global&gt;::inner (3 samples, 0.43%)</title><rect x="42.2475%" y="325" width="0.4267%" height="15" fill="rgb(233,208,19)" fg:x="297" fg:w="3"/><text x="42.4975%" y="335.50"></text></g><g><title>RustyPython.exe`core::ptr::non_null::NonNull&lt;alloc::rc::RcInner&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyImmutableObject&gt; &gt; &gt;::as_ref (3 samples, 0.43%)</title><rect x="42.2475%" y="309" width="0.4267%" height="15" fill="rgb(216,164,2)" fg:x="297" fg:w="3"/><text x="42.4975%" y="319.50"></text></g><g><title>RustyPython.exe`RustyPython::builtins::structure::pyobject::impl$6::clone(enum2$ (3 samples, 0.43%)</title><rect x="51.7781%" y="309" width="0.4267%" height="15" fill="rgb(220,129,5)" fg:x="364" fg:w="3"/><text x="52.0281%" y="319.50"></text></g><g><title>RustyPython.exe`RustyPython::builtins::structure::pyobject::impl$4::clone(RustyPython::builtins::structure::pyobject::PyPointer&lt;enum2$ (1 samples, 0.14%)</title><rect x="52.0626%" y="293" width="0.1422%" height="15" fill="rgb(242,17,10)" fg:x="366" fg:w="1"/><text x="52.3126%" y="303.50"></text></g><g><title>RustyPython.exe`alloc::rc::impl$33::clone(alloc::rc::Rc&lt;core::cell::RefCell&lt;enum2$ (1 samples, 0.14%)</title><rect x="52.0626%" y="277" width="0.1422%" height="15" fill="rgb(242,107,0)" fg:x="366" fg:w="1"/><text x="52.3126%" y="287.50"></text></g><g><title>RustyPython.exe`alloc::rc::Rc&lt;core::cell::RefCell&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyMutableObject&gt; &gt;,alloc::alloc::Global&gt;::inner (1 samples, 0.14%)</title><rect x="52.0626%" y="261" width="0.1422%" height="15" fill="rgb(251,28,31)" fg:x="366" fg:w="1"/><text x="52.3126%" y="271.50"></text></g><g><title>RustyPython.exe`core::ptr::non_null::NonNull&lt;alloc::rc::RcInner&lt;core::cell::RefCell&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyMutableObject&gt; &gt; &gt; &gt;::as_ref (1 samples, 0.14%)</title><rect x="52.0626%" y="245" width="0.1422%" height="15" fill="rgb(233,223,10)" fg:x="366" fg:w="1"/><text x="52.3126%" y="255.50"></text></g><g><title>RustyPython.exe`RustyPython::builtins::function_utils::eval_internal_func_1_arg_min(alloc::rc::Rc&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyInternalFunction&gt;,alloc::alloc::Global&gt;*, enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt;*, ref$&lt;slice2$&lt;enum2$ (5 samples, 0.71%)</title><rect x="53.0583%" y="277" width="0.7112%" height="15" fill="rgb(215,21,27)" fg:x="373" fg:w="5"/><text x="53.3083%" y="287.50"></text></g><g><title>RustyPython.exe`RustyPython::builtins::statics::Statics::get_bool (3 samples, 0.43%)</title><rect x="55.0498%" y="261" width="0.4267%" height="15" fill="rgb(232,23,21)" fg:x="387" fg:w="3"/><text x="55.2998%" y="271.50"></text></g><g><title>RustyPython.exe`RustyPython::builtins::structure::pyobject::impl$6::clone(enum2$ (2 samples, 0.28%)</title><rect x="55.4765%" y="261" width="0.2845%" height="15" fill="rgb(244,5,23)" fg:x="390" fg:w="2"/><text x="55.7265%" y="271.50"></text></g><g><title>RustyPython.exe`core::ptr::drop_in_place(enum2$ (33 samples, 4.69%)</title><rect x="52.2048%" y="309" width="4.6942%" height="15" fill="rgb(226,81,46)" fg:x="367" fg:w="33"/><text x="52.4548%" y="319.50">Rusty..</text></g><g><title>RustyPython.exe`RustyPython::builtins::function_utils::call_function_1_arg_min(enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt;*, enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt;*, ref$&lt;slice2$&lt;enum2$ (31 samples, 4.41%)</title><rect x="52.4893%" y="293" width="4.4097%" height="15" fill="rgb(247,70,30)" fg:x="369" fg:w="31"/><text x="52.7393%" y="303.50">Rusty..</text></g><g><title>RustyPython.exe`RustyPython::builtins::types::pyint::int__eq__(RustyPython::pyarena::PyArena*, enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt;*, enum2$ (22 samples, 3.13%)</title><rect x="53.7696%" y="277" width="3.1294%" height="15" fill="rgb(212,68,19)" fg:x="378" fg:w="22"/><text x="54.0196%" y="287.50">Rus..</text></g><g><title>RustyPython.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (8 samples, 1.14%)</title><rect x="55.7610%" y="261" width="1.1380%" height="15" fill="rgb(240,187,13)" fg:x="392" fg:w="8"/><text x="56.0110%" y="271.50"></text></g><g><title>RustyPython.exe`RustyPython::builtins::types::pyint::parse_int_op_func_params(enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt;*, enum2$ (5 samples, 0.71%)</title><rect x="56.1878%" y="245" width="0.7112%" height="15" fill="rgb(223,113,26)" fg:x="395" fg:w="5"/><text x="56.4378%" y="255.50"></text></g><g><title>RustyPython.exe`RustyPython::builtins::types::pyint::expect_int_promotion(enum2$ (2 samples, 0.28%)</title><rect x="56.6145%" y="229" width="0.2845%" height="15" fill="rgb(206,192,2)" fg:x="398" fg:w="2"/><text x="56.8645%" y="239.50"></text></g><g><title>RustyPython.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option&lt;enum2$ (1 samples, 0.14%)</title><rect x="56.8990%" y="309" width="0.1422%" height="15" fill="rgb(241,108,4)" fg:x="400" fg:w="1"/><text x="57.1490%" y="319.50"></text></g><g><title>RustyPython.exe`core::ptr::drop_in_place&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt; &gt;(enum2$ (7 samples, 1.00%)</title><rect x="57.0413%" y="309" width="0.9957%" height="15" fill="rgb(247,173,49)" fg:x="401" fg:w="7"/><text x="57.2913%" y="319.50"></text></g><g><title>RustyPython.exe`alloc::rc::impl$25::deref(alloc::rc::Rc&lt;enum2$ (3 samples, 0.43%)</title><rect x="58.8905%" y="293" width="0.4267%" height="15" fill="rgb(224,114,35)" fg:x="414" fg:w="3"/><text x="59.1405%" y="303.50"></text></g><g><title>RustyPython.exe`alloc::rc::Rc&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyImmutableObject&gt;,alloc::alloc::Global&gt;::inner (3 samples, 0.43%)</title><rect x="58.8905%" y="277" width="0.4267%" height="15" fill="rgb(245,159,27)" fg:x="414" fg:w="3"/><text x="59.1405%" y="287.50"></text></g><g><title>RustyPython.exe`core::ptr::non_null::NonNull&lt;alloc::rc::RcInner&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyImmutableObject&gt; &gt; &gt;::as_ref (3 samples, 0.43%)</title><rect x="58.8905%" y="261" width="0.4267%" height="15" fill="rgb(245,172,44)" fg:x="414" fg:w="3"/><text x="59.1405%" y="271.50"></text></g><g><title>RustyPython.exe`enum2$&lt;RustyPython::builtins::structure::pyclass::PyClass&gt;::search_for_magic_method(enum2$ (14 samples, 1.99%)</title><rect x="59.3172%" y="293" width="1.9915%" height="15" fill="rgb(236,23,11)" fg:x="417" fg:w="14"/><text x="59.5672%" y="303.50">R..</text></g><g><title>RustyPython.exe`core::option::impl$39::branch(enum2$&lt;core::option::Option&lt;alloc::rc::Rc&lt;enum2$ (4 samples, 0.57%)</title><rect x="60.7397%" y="277" width="0.5690%" height="15" fill="rgb(205,117,38)" fg:x="427" fg:w="4"/><text x="60.9897%" y="287.50"></text></g><g><title>RustyPython.exe`enum2$&lt;RustyPython::builtins::structure::magic_methods::PyMagicMethod&gt;::get_method (4 samples, 0.57%)</title><rect x="60.7397%" y="261" width="0.5690%" height="15" fill="rgb(237,72,25)" fg:x="427" fg:w="4"/><text x="60.9897%" y="271.50"></text></g><g><title>RustyPython.exe`core::option::impl$5::clone(enum2$&lt;core::option::Option&lt;alloc::rc::Rc&lt;enum2$ (2 samples, 0.28%)</title><rect x="61.0242%" y="245" width="0.2845%" height="15" fill="rgb(244,70,9)" fg:x="429" fg:w="2"/><text x="61.2742%" y="255.50"></text></g><g><title>RustyPython.exe`alloc::rc::impl$33::clone(alloc::rc::Rc&lt;enum2$ (2 samples, 0.28%)</title><rect x="61.0242%" y="229" width="0.2845%" height="15" fill="rgb(217,125,39)" fg:x="429" fg:w="2"/><text x="61.2742%" y="239.50"></text></g><g><title>RustyPython.exe`alloc::rc::RcInnerPtr::inc_strong(alloc::rc::RcInner&lt;enum2$ (2 samples, 0.28%)</title><rect x="61.0242%" y="213" width="0.2845%" height="15" fill="rgb(235,36,10)" fg:x="429" fg:w="2"/><text x="61.2742%" y="223.50"></text></g><g><title>RustyPython.exe`core::intrinsics::unlikely (2 samples, 0.28%)</title><rect x="61.0242%" y="197" width="0.2845%" height="15" fill="rgb(251,123,47)" fg:x="429" fg:w="2"/><text x="61.2742%" y="207.50"></text></g><g><title>RustyPython.exe`RustyPython::builtins::functions::compare::compare_op(enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt;*, enum2$ (100 samples, 14.22%)</title><rect x="47.2262%" y="341" width="14.2248%" height="15" fill="rgb(221,13,13)" fg:x="332" fg:w="100"/><text x="47.4762%" y="351.50">RustyPython.exe`RustyP..</text></g><g><title>RustyPython.exe`RustyPython::builtins::functions::compare::left_hand_compare_op(enum2$&lt;RustyPython::builtins::structure::magic_methods::PyMagicMethod&gt;*, enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt;*, enum2$ (99 samples, 14.08%)</title><rect x="47.3684%" y="325" width="14.0825%" height="15" fill="rgb(238,131,9)" fg:x="333" fg:w="99"/><text x="47.6184%" y="335.50">RustyPython.exe`Rusty..</text></g><g><title>RustyPython.exe`enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt;::get_magic_method(enum2$ (24 samples, 3.41%)</title><rect x="58.0370%" y="309" width="3.4139%" height="15" fill="rgb(211,50,8)" fg:x="408" fg:w="24"/><text x="58.2870%" y="319.50">Rus..</text></g><g><title>RustyPython.exe`enum2$&lt;RustyPython::builtins::structure::pyobject::PyImmutableObject&gt;::get_magic_method(enum2$ (1 samples, 0.14%)</title><rect x="61.3087%" y="293" width="0.1422%" height="15" fill="rgb(245,182,24)" fg:x="431" fg:w="1"/><text x="61.5587%" y="303.50"></text></g><g><title>RustyPython.exe`enum2$&lt;RustyPython::builtins::structure::pyobject::PyImmutableObject&gt;::get_class (1 samples, 0.14%)</title><rect x="61.3087%" y="277" width="0.1422%" height="15" fill="rgb(242,14,37)" fg:x="431" fg:w="1"/><text x="61.5587%" y="287.50"></text></g><g><title>RustyPython.exe`RustyPython::evaluator::eval_fun_call(enum2$&lt;RustyPython::parser::Expr&gt;**, ref$&lt;slice2$&lt;enum2$ (8 samples, 1.14%)</title><rect x="61.4509%" y="341" width="1.1380%" height="15" fill="rgb(246,228,12)" fg:x="432" fg:w="8"/><text x="61.7009%" y="351.50"></text></g><g><title>RustyPython.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;enum2$ (8 samples, 1.14%)</title><rect x="61.4509%" y="325" width="1.1380%" height="15" fill="rgb(213,55,15)" fg:x="432" fg:w="8"/><text x="61.7009%" y="335.50"></text></g><g><title>RustyPython.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;enum2$ (8 samples, 1.14%)</title><rect x="61.4509%" y="309" width="1.1380%" height="15" fill="rgb(209,9,3)" fg:x="432" fg:w="8"/><text x="61.7009%" y="319.50"></text></g><g><title>RustyPython.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec&lt;enum2$ (8 samples, 1.14%)</title><rect x="61.4509%" y="293" width="1.1380%" height="15" fill="rgb(230,59,30)" fg:x="432" fg:w="8"/><text x="61.7009%" y="303.50"></text></g><g><title>RustyPython.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (8 samples, 1.14%)</title><rect x="61.4509%" y="277" width="1.1380%" height="15" fill="rgb(209,121,21)" fg:x="432" fg:w="8"/><text x="61.7009%" y="287.50"></text></g><g><title>RustyPython.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (8 samples, 1.14%)</title><rect x="61.4509%" y="261" width="1.1380%" height="15" fill="rgb(220,109,13)" fg:x="432" fg:w="8"/><text x="61.7009%" y="271.50"></text></g><g><title>RustyPython.exe`alloc::alloc::dealloc (8 samples, 1.14%)</title><rect x="61.4509%" y="245" width="1.1380%" height="15" fill="rgb(232,18,1)" fg:x="432" fg:w="8"/><text x="61.7009%" y="255.50"></text></g><g><title>RustyPython.exe`core::ptr::drop_in_place&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt; &gt;(enum2$ (8 samples, 1.14%)</title><rect x="61.4509%" y="229" width="1.1380%" height="15" fill="rgb(215,41,42)" fg:x="432" fg:w="8"/><text x="61.7009%" y="239.50"></text></g><g><title>RustyPython.exe`core::ptr::drop_in_place&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt; &gt;(enum2$ (5 samples, 0.71%)</title><rect x="62.5889%" y="341" width="0.7112%" height="15" fill="rgb(224,123,36)" fg:x="440" fg:w="5"/><text x="62.8389%" y="351.50"></text></g><g><title>RustyPython.exe`RustyPython::evaluator::eval_fun_call(enum2$&lt;RustyPython::parser::Expr&gt;**, ref$&lt;slice2$&lt;enum2$ (4 samples, 0.57%)</title><rect x="74.5377%" y="309" width="0.5690%" height="15" fill="rgb(240,125,3)" fg:x="524" fg:w="4"/><text x="74.7877%" y="319.50"></text></g><g><title>RustyPython.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;enum2$ (4 samples, 0.57%)</title><rect x="74.5377%" y="293" width="0.5690%" height="15" fill="rgb(205,98,50)" fg:x="524" fg:w="4"/><text x="74.7877%" y="303.50"></text></g><g><title>RustyPython.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;enum2$ (4 samples, 0.57%)</title><rect x="74.5377%" y="277" width="0.5690%" height="15" fill="rgb(205,185,37)" fg:x="524" fg:w="4"/><text x="74.7877%" y="287.50"></text></g><g><title>RustyPython.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec&lt;enum2$ (4 samples, 0.57%)</title><rect x="74.5377%" y="261" width="0.5690%" height="15" fill="rgb(238,207,15)" fg:x="524" fg:w="4"/><text x="74.7877%" y="271.50"></text></g><g><title>RustyPython.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (4 samples, 0.57%)</title><rect x="74.5377%" y="245" width="0.5690%" height="15" fill="rgb(213,199,42)" fg:x="524" fg:w="4"/><text x="74.7877%" y="255.50"></text></g><g><title>RustyPython.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (4 samples, 0.57%)</title><rect x="74.5377%" y="229" width="0.5690%" height="15" fill="rgb(235,201,11)" fg:x="524" fg:w="4"/><text x="74.7877%" y="239.50"></text></g><g><title>RustyPython.exe`alloc::alloc::dealloc (4 samples, 0.57%)</title><rect x="74.5377%" y="213" width="0.5690%" height="15" fill="rgb(207,46,11)" fg:x="524" fg:w="4"/><text x="74.7877%" y="223.50"></text></g><g><title>RustyPython.exe`ahash::fallback_hash::impl$1::finish (5 samples, 0.71%)</title><rect x="76.1024%" y="149" width="0.7112%" height="15" fill="rgb(241,35,35)" fg:x="535" fg:w="5"/><text x="76.3524%" y="159.50"></text></g><g><title>RustyPython.exe`ahash::operations::folded_multiply (5 samples, 0.71%)</title><rect x="76.1024%" y="133" width="0.7112%" height="15" fill="rgb(243,32,47)" fg:x="535" fg:w="5"/><text x="76.3524%" y="143.50"></text></g><g><title>RustyPython.exe`ahash::random_state::impl$5::build_hasher (4 samples, 0.57%)</title><rect x="76.8137%" y="149" width="0.5690%" height="15" fill="rgb(247,202,23)" fg:x="540" fg:w="4"/><text x="77.0637%" y="159.50"></text></g><g><title>RustyPython.exe`ahash::fallback_hash::AHasher::from_random_state (4 samples, 0.57%)</title><rect x="76.8137%" y="133" width="0.5690%" height="15" fill="rgb(219,102,11)" fg:x="540" fg:w="4"/><text x="77.0637%" y="143.50"></text></g><g><title>RustyPython.exe`ahash::fallback_hash::impl$1::write(ahash::fallback_hash::AHasher*, ref$&lt;slice2$ (6 samples, 0.85%)</title><rect x="77.3826%" y="101" width="0.8535%" height="15" fill="rgb(243,110,44)" fg:x="544" fg:w="6"/><text x="77.6326%" y="111.50"></text></g><g><title>RustyPython.exe`ahash::fallback_hash::AHasher::large_update (2 samples, 0.28%)</title><rect x="77.9516%" y="85" width="0.2845%" height="15" fill="rgb(222,74,54)" fg:x="548" fg:w="2"/><text x="78.2016%" y="95.50"></text></g><g><title>RustyPython.exe`ahash::operations::folded_multiply (2 samples, 0.28%)</title><rect x="77.9516%" y="69" width="0.2845%" height="15" fill="rgb(216,99,12)" fg:x="548" fg:w="2"/><text x="78.2016%" y="79.50"></text></g><g><title>RustyPython.exe`core::num::impl$10::wrapping_mul (2 samples, 0.28%)</title><rect x="77.9516%" y="53" width="0.2845%" height="15" fill="rgb(226,22,26)" fg:x="548" fg:w="2"/><text x="78.2016%" y="63.50"></text></g><g><title>RustyPython.exe`hashbrown::map::make_hash(ahash::random_state::RandomState*, ref$ (19 samples, 2.70%)</title><rect x="76.1024%" y="213" width="2.7027%" height="15" fill="rgb(217,163,10)" fg:x="535" fg:w="19"/><text x="76.3524%" y="223.50">Ru..</text></g><g><title>RustyPython.exe`ahash::random_state::impl$5::hash_one(ahash::random_state::RandomState*, ref$ (19 samples, 2.70%)</title><rect x="76.1024%" y="197" width="2.7027%" height="15" fill="rgb(213,25,53)" fg:x="535" fg:w="19"/><text x="76.3524%" y="207.50">Ru..</text></g><g><title>RustyPython.exe`ahash::random_state::RandomState::hash_one(ref$ (19 samples, 2.70%)</title><rect x="76.1024%" y="181" width="2.7027%" height="15" fill="rgb(252,105,26)" fg:x="535" fg:w="19"/><text x="76.3524%" y="191.50">Ru..</text></g><g><title>RustyPython.exe`ahash::specialize::impl$0::get_hash(ref$ (19 samples, 2.70%)</title><rect x="76.1024%" y="165" width="2.7027%" height="15" fill="rgb(220,39,43)" fg:x="535" fg:w="19"/><text x="76.3524%" y="175.50">Ru..</text></g><g><title>RustyPython.exe`core::hash::impls::impl$5::hash(ref$ (10 samples, 1.42%)</title><rect x="77.3826%" y="149" width="1.4225%" height="15" fill="rgb(229,68,48)" fg:x="544" fg:w="10"/><text x="77.6326%" y="159.50"></text></g><g><title>RustyPython.exe`core::hash::impls::impl$2::hash(ref$ (10 samples, 1.42%)</title><rect x="77.3826%" y="133" width="1.4225%" height="15" fill="rgb(252,8,32)" fg:x="544" fg:w="10"/><text x="77.6326%" y="143.50"></text></g><g><title>RustyPython.exe`core::hash::Hasher::write_str(ahash::fallback_hash::AHasher*, ref$ (10 samples, 1.42%)</title><rect x="77.3826%" y="117" width="1.4225%" height="15" fill="rgb(223,20,43)" fg:x="544" fg:w="10"/><text x="77.6326%" y="127.50"></text></g><g><title>RustyPython.exe`ahash::fallback_hash::impl$1::write_u8 (4 samples, 0.57%)</title><rect x="78.2361%" y="101" width="0.5690%" height="15" fill="rgb(229,81,49)" fg:x="550" fg:w="4"/><text x="78.4861%" y="111.50"></text></g><g><title>RustyPython.exe`ahash::fallback_hash::AHasher::update (4 samples, 0.57%)</title><rect x="78.2361%" y="85" width="0.5690%" height="15" fill="rgb(236,28,36)" fg:x="550" fg:w="4"/><text x="78.4861%" y="95.50"></text></g><g><title>RustyPython.exe`ahash::operations::folded_multiply (4 samples, 0.57%)</title><rect x="78.2361%" y="69" width="0.5690%" height="15" fill="rgb(249,185,26)" fg:x="550" fg:w="4"/><text x="78.4861%" y="79.50"></text></g><g><title>RustyPython.exe`core::num::impl$10::wrapping_mul (4 samples, 0.57%)</title><rect x="78.2361%" y="53" width="0.5690%" height="15" fill="rgb(249,174,33)" fg:x="550" fg:w="4"/><text x="78.4861%" y="63.50"></text></g><g><title>RustyPython.exe`hashbrown::control::group::sse2::Group::match_tag (5 samples, 0.71%)</title><rect x="79.5164%" y="165" width="0.7112%" height="15" fill="rgb(233,201,37)" fg:x="559" fg:w="5"/><text x="79.7664%" y="175.50"></text></g><g><title>RustyPython.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.71%)</title><rect x="79.5164%" y="149" width="0.7112%" height="15" fill="rgb(221,78,26)" fg:x="559" fg:w="5"/><text x="79.7664%" y="159.50"></text></g><g><title>RustyPython.exe`hashbrown::raw::RawTableInner::probe_seq (3 samples, 0.43%)</title><rect x="80.2276%" y="165" width="0.4267%" height="15" fill="rgb(250,127,30)" fg:x="564" fg:w="3"/><text x="80.4776%" y="175.50"></text></g><g><title>RustyPython.exe`memcmp (3 samples, 0.43%)</title><rect x="80.9388%" y="37" width="0.4267%" height="15" fill="rgb(230,49,44)" fg:x="569" fg:w="3"/><text x="81.1888%" y="47.50"></text></g><g><title>RustyPython.exe`hashbrown::map::equivalent_key::closure$0(hashbrown::map::equivalent_key::closure_env$0&lt;str$,alloc::string::String,core::cell::Cell&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt; &gt; &gt;*, tuple$&lt;alloc::string::String,core::cell::Cell&lt;enum2$ (9 samples, 1.28%)</title><rect x="80.6543%" y="149" width="1.2802%" height="15" fill="rgb(229,67,23)" fg:x="567" fg:w="9"/><text x="80.9043%" y="159.50"></text></g><g><title>RustyPython.exe`hashbrown::impl$0::equivalent(ref$ (9 samples, 1.28%)</title><rect x="80.6543%" y="133" width="1.2802%" height="15" fill="rgb(249,83,47)" fg:x="567" fg:w="9"/><text x="80.9043%" y="143.50"></text></g><g><title>RustyPython.exe`core::cmp::impls::impl$9::eq(ref$&lt;str$&gt;*, ref$ (9 samples, 1.28%)</title><rect x="80.6543%" y="117" width="1.2802%" height="15" fill="rgb(215,43,3)" fg:x="567" fg:w="9"/><text x="80.9043%" y="127.50"></text></g><g><title>RustyPython.exe`core::str::traits::impl$1::eq(ref$&lt;str$&gt;, ref$ (9 samples, 1.28%)</title><rect x="80.6543%" y="101" width="1.2802%" height="15" fill="rgb(238,154,13)" fg:x="567" fg:w="9"/><text x="80.9043%" y="111.50"></text></g><g><title>RustyPython.exe`core::cmp::impls::impl$9::eq(ref$&lt;slice2$&lt;u8&gt; &gt;*, ref$&lt;slice2$ (9 samples, 1.28%)</title><rect x="80.6543%" y="85" width="1.2802%" height="15" fill="rgb(219,56,2)" fg:x="567" fg:w="9"/><text x="80.9043%" y="95.50"></text></g><g><title>RustyPython.exe`core::slice::cmp::impl$0::eq(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (9 samples, 1.28%)</title><rect x="80.6543%" y="69" width="1.2802%" height="15" fill="rgb(233,0,4)" fg:x="567" fg:w="9"/><text x="80.9043%" y="79.50"></text></g><g><title>RustyPython.exe`core::slice::cmp::impl$5::equal(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (9 samples, 1.28%)</title><rect x="80.6543%" y="53" width="1.2802%" height="15" fill="rgb(235,30,7)" fg:x="567" fg:w="9"/><text x="80.9043%" y="63.50"></text></g><g><title>`0x7FFD0373132A (4 samples, 0.57%)</title><rect x="81.3656%" y="37" width="0.5690%" height="15" fill="rgb(250,79,13)" fg:x="572" fg:w="4"/><text x="81.6156%" y="47.50"></text></g><g><title>RustyPython.exe`RustyPython::evaluator::eval_var(ref$ (49 samples, 6.97%)</title><rect x="75.1067%" y="309" width="6.9701%" height="15" fill="rgb(211,146,34)" fg:x="528" fg:w="49"/><text x="75.3567%" y="319.50">RustyPyth..</text></g><g><title>RustyPython.exe`RustyPython::pyarena::PyArena::get(ref$ (49 samples, 6.97%)</title><rect x="75.1067%" y="293" width="6.9701%" height="15" fill="rgb(228,22,38)" fg:x="528" fg:w="49"/><text x="75.3567%" y="303.50">RustyPyth..</text></g><g><title>RustyPython.exe`ahash::hash_map::AHashMap&lt;alloc::string::String,core::cell::Cell&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt; &gt;,ahash::random_state::RandomState&gt;::get(ref$ (49 samples, 6.97%)</title><rect x="75.1067%" y="277" width="6.9701%" height="15" fill="rgb(235,168,5)" fg:x="528" fg:w="49"/><text x="75.3567%" y="287.50">RustyPyth..</text></g><g><title>RustyPython.exe`std::collections::hash::map::HashMap&lt;alloc::string::String,core::cell::Cell&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt; &gt;,ahash::random_state::RandomState&gt;::get(ref$ (49 samples, 6.97%)</title><rect x="75.1067%" y="261" width="6.9701%" height="15" fill="rgb(221,155,16)" fg:x="528" fg:w="49"/><text x="75.3567%" y="271.50">RustyPyth..</text></g><g><title>RustyPython.exe`hashbrown::map::HashMap&lt;alloc::string::String,core::cell::Cell&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt; &gt;,ahash::random_state::RandomState,alloc::alloc::Global&gt;::get(ref$ (49 samples, 6.97%)</title><rect x="75.1067%" y="245" width="6.9701%" height="15" fill="rgb(215,215,53)" fg:x="528" fg:w="49"/><text x="75.3567%" y="255.50">RustyPyth..</text></g><g><title>RustyPython.exe`hashbrown::map::HashMap&lt;alloc::string::String,core::cell::Cell&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt; &gt;,ahash::random_state::RandomState,alloc::alloc::Global&gt;::get_inner&lt;alloc::string::String,core::cell::Cell&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt; &gt;,ahash::random_state::RandomState,alloc::alloc::Global,str$&gt;(ref$ (49 samples, 6.97%)</title><rect x="75.1067%" y="229" width="6.9701%" height="15" fill="rgb(223,4,10)" fg:x="528" fg:w="49"/><text x="75.3567%" y="239.50">RustyPyth..</text></g><g><title>RustyPython.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,core::cell::Cell&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt; &gt; &gt;,alloc::alloc::Global&gt;::get(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;str$,alloc::string::String,core::cell::Cell&lt;enum2$ (23 samples, 3.27%)</title><rect x="78.8051%" y="213" width="3.2717%" height="15" fill="rgb(234,103,6)" fg:x="554" fg:w="23"/><text x="79.0551%" y="223.50">Rus..</text></g><g><title>RustyPython.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,core::cell::Cell&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt; &gt; &gt;,alloc::alloc::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;str$,alloc::string::String,core::cell::Cell&lt;enum2$ (22 samples, 3.13%)</title><rect x="78.9474%" y="197" width="3.1294%" height="15" fill="rgb(227,97,0)" fg:x="555" fg:w="22"/><text x="79.1974%" y="207.50">Rus..</text></g><g><title>RustyPython.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (22 samples, 3.13%)</title><rect x="78.9474%" y="181" width="3.1294%" height="15" fill="rgb(234,150,53)" fg:x="555" fg:w="22"/><text x="79.1974%" y="191.50">Rus..</text></g><g><title>RustyPython.exe`hashbrown::raw::impl$8::find::closure$0(hashbrown::raw::impl$8::find::closure_env$0&lt;tuple$&lt;alloc::string::String,core::cell::Cell&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::equivalent_key::closure_env$0&lt;str$,alloc::string::String,core::cell::Cell&lt;enum2$ (10 samples, 1.42%)</title><rect x="80.6543%" y="165" width="1.4225%" height="15" fill="rgb(228,201,54)" fg:x="567" fg:w="10"/><text x="80.9043%" y="175.50"></text></g><g><title>RustyPython.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,core::cell::Cell&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt; &gt; &gt;,alloc::alloc::Global&gt;::bucket (1 samples, 0.14%)</title><rect x="81.9346%" y="149" width="0.1422%" height="15" fill="rgb(222,22,37)" fg:x="576" fg:w="1"/><text x="82.1846%" y="159.50"></text></g><g><title>RustyPython.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::string::String,core::cell::Cell&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt; &gt; &gt; &gt;::as_ptr (1 samples, 0.14%)</title><rect x="81.9346%" y="133" width="0.1422%" height="15" fill="rgb(237,53,32)" fg:x="576" fg:w="1"/><text x="82.1846%" y="143.50"></text></g><g><title>RustyPython.exe`core::ptr::mut_ptr::impl$0::sub(tuple$&lt;alloc::string::String,core::cell::Cell&lt;enum2$ (1 samples, 0.14%)</title><rect x="81.9346%" y="117" width="0.1422%" height="15" fill="rgb(233,25,53)" fg:x="576" fg:w="1"/><text x="82.1846%" y="127.50"></text></g><g><title>RustyPython.exe`alloc::string::String::as_str (4 samples, 0.57%)</title><rect x="82.0768%" y="293" width="0.5690%" height="15" fill="rgb(210,40,34)" fg:x="577" fg:w="4"/><text x="82.3268%" y="303.50"></text></g><g><title>RustyPython.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_slice (4 samples, 0.57%)</title><rect x="82.0768%" y="277" width="0.5690%" height="15" fill="rgb(241,220,44)" fg:x="577" fg:w="4"/><text x="82.3268%" y="287.50"></text></g><g><title>RustyPython.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_ptr (4 samples, 0.57%)</title><rect x="82.0768%" y="261" width="0.5690%" height="15" fill="rgb(235,28,35)" fg:x="577" fg:w="4"/><text x="82.3268%" y="271.50"></text></g><g><title>RustyPython.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (4 samples, 0.57%)</title><rect x="82.0768%" y="245" width="0.5690%" height="15" fill="rgb(210,56,17)" fg:x="577" fg:w="4"/><text x="82.3268%" y="255.50"></text></g><g><title>RustyPython.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (4 samples, 0.57%)</title><rect x="82.0768%" y="229" width="0.5690%" height="15" fill="rgb(224,130,29)" fg:x="577" fg:w="4"/><text x="82.3268%" y="239.50"></text></g><g><title>RustyPython.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (4 samples, 0.57%)</title><rect x="82.0768%" y="213" width="0.5690%" height="15" fill="rgb(235,212,8)" fg:x="577" fg:w="4"/><text x="82.3268%" y="223.50"></text></g><g><title>RustyPython.exe`RustyPython::evaluator::eval_if(enum2$&lt;RustyPython::parser::Expr&gt;*, RustyPython::parser::CodeBlock*, alloc::vec::Vec&lt;tuple$&lt;enum2$&lt;RustyPython::parser::Expr&gt;,RustyPython::parser::CodeBlock&gt;,alloc::alloc::Global&gt;*, enum2$&lt;core::option::Option (349 samples, 49.64%)</title><rect x="34.7084%" y="389" width="49.6444%" height="15" fill="rgb(223,33,50)" fg:x="244" fg:w="349"/><text x="34.9584%" y="399.50">RustyPython.exe`RustyPython::evaluator::eval_if(enum2$&lt;RustyPython::parser::Expr&gt;*..</text></g><g><title>RustyPython.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;enum2$ (341 samples, 48.51%)</title><rect x="35.8464%" y="373" width="48.5064%" height="15" fill="rgb(219,149,13)" fg:x="252" fg:w="341"/><text x="36.0964%" y="383.50">RustyPython.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;enum2$</text></g><g><title>RustyPython.exe`RustyPython::evaluator::eval_expr(enum2$ (293 samples, 41.68%)</title><rect x="42.6743%" y="357" width="41.6785%" height="15" fill="rgb(250,156,29)" fg:x="300" fg:w="293"/><text x="42.9243%" y="367.50">RustyPython.exe`RustyPython::evaluator::eval_expr(enum2$</text></g><g><title>RustyPython.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;enum2$ (148 samples, 21.05%)</title><rect x="63.3001%" y="341" width="21.0526%" height="15" fill="rgb(216,193,19)" fg:x="445" fg:w="148"/><text x="63.5501%" y="351.50">RustyPython.exe`core::result::imp..</text></g><g><title>RustyPython.exe`RustyPython::evaluator::eval_expr(enum2$ (84 samples, 11.95%)</title><rect x="72.4040%" y="325" width="11.9488%" height="15" fill="rgb(216,135,14)" fg:x="509" fg:w="84"/><text x="72.6540%" y="335.50">RustyPython.exe`Ru..</text></g><g><title>RustyPython.exe`alloc::string::impl$30::deref (16 samples, 2.28%)</title><rect x="82.0768%" y="309" width="2.2760%" height="15" fill="rgb(241,47,5)" fg:x="577" fg:w="16"/><text x="82.3268%" y="319.50">R..</text></g><g><title>RustyPython.exe`enum2$&lt;core::result::Result&lt;ref$&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt; &gt;,RustyPython::builtins::structure::pyexception::PyException&gt; &gt;::map(enum2$&lt;core::result::Result&lt;ref$&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt; &gt;,RustyPython::builtins::structure::pyexception::PyException&gt; &gt;, core::result::impl$1::cloned::closure_env$0&lt;enum2$ (12 samples, 1.71%)</title><rect x="82.6458%" y="293" width="1.7070%" height="15" fill="rgb(233,42,35)" fg:x="581" fg:w="12"/><text x="82.8958%" y="303.50"></text></g><g><title>RustyPython.exe`core::result::impl$1::cloned::closure$0(core::result::impl$1::cloned::closure_env$0&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt;,RustyPython::builtins::structure::pyexception::PyException&gt;, enum2$ (12 samples, 1.71%)</title><rect x="82.6458%" y="277" width="1.7070%" height="15" fill="rgb(231,13,6)" fg:x="581" fg:w="12"/><text x="82.8958%" y="287.50"></text></g><g><title>RustyPython.exe`RustyPython::builtins::structure::pyobject::impl$6::clone(enum2$ (12 samples, 1.71%)</title><rect x="82.6458%" y="261" width="1.7070%" height="15" fill="rgb(207,181,40)" fg:x="581" fg:w="12"/><text x="82.8958%" y="271.50"></text></g><g><title>RustyPython.exe`alloc::rc::impl$33::clone(alloc::rc::Rc&lt;enum2$ (3 samples, 0.43%)</title><rect x="83.9260%" y="245" width="0.4267%" height="15" fill="rgb(254,173,49)" fg:x="590" fg:w="3"/><text x="84.1760%" y="255.50"></text></g><g><title>RustyPython.exe`alloc::rc::Rc&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyImmutableObject&gt;,alloc::alloc::Global&gt;::inner (3 samples, 0.43%)</title><rect x="83.9260%" y="229" width="0.4267%" height="15" fill="rgb(221,1,38)" fg:x="590" fg:w="3"/><text x="84.1760%" y="239.50"></text></g><g><title>RustyPython.exe`core::ptr::non_null::NonNull&lt;alloc::rc::RcInner&lt;enum2$&lt;RustyPython::builtins::structure::pyobject::PyImmutableObject&gt; &gt; &gt;::as_ref (3 samples, 0.43%)</title><rect x="83.9260%" y="213" width="0.4267%" height="15" fill="rgb(206,124,46)" fg:x="590" fg:w="3"/><text x="84.1760%" y="223.50"></text></g><g><title>RustyPython.exe`alloc::vec::impl$8::deref(alloc::vec::Vec&lt;enum2$ (1 samples, 0.14%)</title><rect x="84.3528%" y="389" width="0.1422%" height="15" fill="rgb(249,21,11)" fg:x="593" fg:w="1"/><text x="84.6028%" y="399.50"></text></g><g><title>RustyPython.exe`core::slice::iter::Iter&lt;enum2$&lt;RustyPython::parser::Statement&gt; &gt;::new(ref$&lt;slice2$&lt;enum2$ (1 samples, 0.14%)</title><rect x="84.3528%" y="373" width="0.1422%" height="15" fill="rgb(222,201,40)" fg:x="593" fg:w="1"/><text x="84.6028%" y="383.50"></text></g><g><title>RustyPython.exe`core::ptr::mut_ptr::impl$0::add(enum2$ (1 samples, 0.14%)</title><rect x="84.3528%" y="357" width="0.1422%" height="15" fill="rgb(235,61,29)" fg:x="593" fg:w="1"/><text x="84.6028%" y="367.50"></text></g><g><title>RustyPython.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;enum2$ (366 samples, 52.06%)</title><rect x="32.8592%" y="421" width="52.0626%" height="15" fill="rgb(219,207,3)" fg:x="231" fg:w="366"/><text x="33.1092%" y="431.50">RustyPython.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;enum2$&lt;core:..</text></g><g><title>RustyPython.exe`RustyPython::evaluator::eval_code_block (366 samples, 52.06%)</title><rect x="32.8592%" y="405" width="52.0626%" height="15" fill="rgb(222,56,46)" fg:x="231" fg:w="366"/><text x="33.1092%" y="415.50">RustyPython.exe`RustyPython::evaluator::eval_code_block</text></g><g><title>RustyPython.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter&lt;enum2$ (3 samples, 0.43%)</title><rect x="84.4950%" y="389" width="0.4267%" height="15" fill="rgb(239,76,54)" fg:x="594" fg:w="3"/><text x="84.7450%" y="399.50"></text></g><g><title>RustyPython.exe`std::sys::alloc::windows::get_process_heap (1 samples, 0.14%)</title><rect x="85.0640%" y="389" width="0.1422%" height="15" fill="rgb(231,124,27)" fg:x="598" fg:w="1"/><text x="85.3140%" y="399.50"></text></g><g><title>RustyPython.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (5 samples, 0.71%)</title><rect x="84.9218%" y="421" width="0.7112%" height="15" fill="rgb(249,195,6)" fg:x="597" fg:w="5"/><text x="85.1718%" y="431.50"></text></g><g><title>RustyPython.exe`std::sys::alloc::windows::impl$0::dealloc (5 samples, 0.71%)</title><rect x="84.9218%" y="405" width="0.7112%" height="15" fill="rgb(237,174,47)" fg:x="597" fg:w="5"/><text x="85.1718%" y="415.50"></text></g><g><title>`0x7FFD3E923F90 (3 samples, 0.43%)</title><rect x="85.2063%" y="389" width="0.4267%" height="15" fill="rgb(206,201,31)" fg:x="599" fg:w="3"/><text x="85.4563%" y="399.50"></text></g><g><title>`0x7FFD4020693E (2 samples, 0.28%)</title><rect x="85.6330%" y="421" width="0.2845%" height="15" fill="rgb(231,57,52)" fg:x="602" fg:w="2"/><text x="85.8830%" y="431.50"></text></g><g><title>`0x7FFD40206950 (2 samples, 0.28%)</title><rect x="85.9175%" y="421" width="0.2845%" height="15" fill="rgb(248,177,22)" fg:x="604" fg:w="2"/><text x="86.1675%" y="431.50"></text></g><g><title>`0x7FFD40206977 (2 samples, 0.28%)</title><rect x="86.2020%" y="421" width="0.2845%" height="15" fill="rgb(215,211,37)" fg:x="606" fg:w="2"/><text x="86.4520%" y="431.50"></text></g><g><title>`0x7FFD402069A6 (1 samples, 0.14%)</title><rect x="86.4865%" y="421" width="0.1422%" height="15" fill="rgb(241,128,51)" fg:x="608" fg:w="1"/><text x="86.7365%" y="431.50"></text></g><g><title>`0x7FFD402069BD (1 samples, 0.14%)</title><rect x="86.6287%" y="421" width="0.1422%" height="15" fill="rgb(227,165,31)" fg:x="609" fg:w="1"/><text x="86.8787%" y="431.50"></text></g><g><title>`0x7FFD402069CA (1 samples, 0.14%)</title><rect x="86.7710%" y="421" width="0.1422%" height="15" fill="rgb(228,167,24)" fg:x="610" fg:w="1"/><text x="87.0210%" y="431.50"></text></g><g><title>`0x7FFD402069D0 (1 samples, 0.14%)</title><rect x="86.9132%" y="421" width="0.1422%" height="15" fill="rgb(228,143,12)" fg:x="611" fg:w="1"/><text x="87.1632%" y="431.50"></text></g><g><title>`0x7FFD402069E1 (1 samples, 0.14%)</title><rect x="87.0555%" y="421" width="0.1422%" height="15" fill="rgb(249,149,8)" fg:x="612" fg:w="1"/><text x="87.3055%" y="431.50"></text></g><g><title>`0x7FFD402069EE (2 samples, 0.28%)</title><rect x="87.1977%" y="421" width="0.2845%" height="15" fill="rgb(243,35,44)" fg:x="613" fg:w="2"/><text x="87.4477%" y="431.50"></text></g><g><title>`0x7FFD402069FC (1 samples, 0.14%)</title><rect x="87.4822%" y="421" width="0.1422%" height="15" fill="rgb(246,89,9)" fg:x="615" fg:w="1"/><text x="87.7322%" y="431.50"></text></g><g><title>`0x7FFD40206A0F (1 samples, 0.14%)</title><rect x="87.6245%" y="421" width="0.1422%" height="15" fill="rgb(233,213,13)" fg:x="616" fg:w="1"/><text x="87.8745%" y="431.50"></text></g><g><title>`0x7FFD40206A1C (1 samples, 0.14%)</title><rect x="87.7667%" y="421" width="0.1422%" height="15" fill="rgb(233,141,41)" fg:x="617" fg:w="1"/><text x="88.0167%" y="431.50"></text></g><g><title>`0x7FFD40206A35 (3 samples, 0.43%)</title><rect x="87.9090%" y="421" width="0.4267%" height="15" fill="rgb(239,167,4)" fg:x="618" fg:w="3"/><text x="88.1590%" y="431.50"></text></g><g><title>`0x7FFD40206A89 (4 samples, 0.57%)</title><rect x="88.3357%" y="421" width="0.5690%" height="15" fill="rgb(209,217,16)" fg:x="621" fg:w="4"/><text x="88.5857%" y="431.50"></text></g><g><title>`0x7FFD40206AAA (3 samples, 0.43%)</title><rect x="88.9047%" y="421" width="0.4267%" height="15" fill="rgb(219,88,35)" fg:x="625" fg:w="3"/><text x="89.1547%" y="431.50"></text></g><g><title>`0x7FFD40206AB7 (24 samples, 3.41%)</title><rect x="89.3314%" y="421" width="3.4139%" height="15" fill="rgb(220,193,23)" fg:x="628" fg:w="24"/><text x="89.5814%" y="431.50">`0x..</text></g><g><title>`0x7FFD40206AD2 (2 samples, 0.28%)</title><rect x="92.7454%" y="421" width="0.2845%" height="15" fill="rgb(230,90,52)" fg:x="652" fg:w="2"/><text x="92.9954%" y="431.50"></text></g><g><title>`0x7FFD40206AED (4 samples, 0.57%)</title><rect x="93.0299%" y="421" width="0.5690%" height="15" fill="rgb(252,106,19)" fg:x="654" fg:w="4"/><text x="93.2799%" y="431.50"></text></g><g><title>`0x7FFD40206B16 (6 samples, 0.85%)</title><rect x="93.5989%" y="421" width="0.8535%" height="15" fill="rgb(206,74,20)" fg:x="658" fg:w="6"/><text x="93.8489%" y="431.50"></text></g><g><title>`0x7FFD40206B2F (1 samples, 0.14%)</title><rect x="94.4523%" y="421" width="0.1422%" height="15" fill="rgb(230,138,44)" fg:x="664" fg:w="1"/><text x="94.7023%" y="431.50"></text></g><g><title>`0x7FFD40206B4D (2 samples, 0.28%)</title><rect x="94.5946%" y="421" width="0.2845%" height="15" fill="rgb(235,182,43)" fg:x="665" fg:w="2"/><text x="94.8446%" y="431.50"></text></g><g><title>RustyPython.exe`RustyPython::evaluator::eval_code_block (668 samples, 95.02%)</title><rect x="0.1422%" y="501" width="95.0213%" height="15" fill="rgb(242,16,51)" fg:x="1" fg:w="668"/><text x="0.3922%" y="511.50">RustyPython.exe`RustyPython::evaluator::eval_code_block</text></g><g><title>RustyPython.exe`RustyPython::evaluator::eval_for(ref$&lt;str$&gt;, enum2$ (668 samples, 95.02%)</title><rect x="0.1422%" y="485" width="95.0213%" height="15" fill="rgb(248,9,4)" fg:x="1" fg:w="668"/><text x="0.3922%" y="495.50">RustyPython.exe`RustyPython::evaluator::eval_for(ref$&lt;str$&gt;, enum2$</text></g><g><title>RustyPython.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;enum2$ (668 samples, 95.02%)</title><rect x="0.1422%" y="469" width="95.0213%" height="15" fill="rgb(210,31,22)" fg:x="1" fg:w="668"/><text x="0.3922%" y="479.50">RustyPython.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;enum2$</text></g><g><title>RustyPython.exe`RustyPython::evaluator::eval_code_block (668 samples, 95.02%)</title><rect x="0.1422%" y="453" width="95.0213%" height="15" fill="rgb(239,54,39)" fg:x="1" fg:w="668"/><text x="0.3922%" y="463.50">RustyPython.exe`RustyPython::evaluator::eval_code_block</text></g><g><title>RustyPython.exe`RustyPython::evaluator::eval_for(ref$&lt;str$&gt;, enum2$ (668 samples, 95.02%)</title><rect x="0.1422%" y="437" width="95.0213%" height="15" fill="rgb(230,99,41)" fg:x="1" fg:w="668"/><text x="0.3922%" y="447.50">RustyPython.exe`RustyPython::evaluator::eval_for(ref$&lt;str$&gt;, enum2$</text></g><g><title>`0x7FFD40206B61 (2 samples, 0.28%)</title><rect x="94.8791%" y="421" width="0.2845%" height="15" fill="rgb(253,106,12)" fg:x="667" fg:w="2"/><text x="95.1291%" y="431.50"></text></g><g><title>`0x7FFD4023F082 (1 samples, 0.14%)</title><rect x="95.1636%" y="197" width="0.1422%" height="15" fill="rgb(213,46,41)" fg:x="669" fg:w="1"/><text x="95.4136%" y="207.50"></text></g><g><title>`0x7FFD401FB0E7 (1 samples, 0.14%)</title><rect x="95.1636%" y="181" width="0.1422%" height="15" fill="rgb(215,133,35)" fg:x="669" fg:w="1"/><text x="95.4136%" y="191.50"></text></g><g><title>`0x7FFD4023CE01 (1 samples, 0.14%)</title><rect x="95.1636%" y="165" width="0.1422%" height="15" fill="rgb(213,28,5)" fg:x="669" fg:w="1"/><text x="95.4136%" y="175.50"></text></g><g><title>`0x7FFD401E635C (1 samples, 0.14%)</title><rect x="95.1636%" y="149" width="0.1422%" height="15" fill="rgb(215,77,49)" fg:x="669" fg:w="1"/><text x="95.4136%" y="159.50"></text></g><g><title>`0x7FFD401E6F07 (1 samples, 0.14%)</title><rect x="95.1636%" y="133" width="0.1422%" height="15" fill="rgb(248,100,22)" fg:x="669" fg:w="1"/><text x="95.4136%" y="143.50"></text></g><g><title>`0x7FFD401E56A8 (1 samples, 0.14%)</title><rect x="95.1636%" y="117" width="0.1422%" height="15" fill="rgb(208,67,9)" fg:x="669" fg:w="1"/><text x="95.4136%" y="127.50"></text></g><g><title>RustyPython.exe`RustyPython::evaluator::evaluate (670 samples, 95.31%)</title><rect x="0.1422%" y="517" width="95.3058%" height="15" fill="rgb(219,133,21)" fg:x="1" fg:w="670"/><text x="0.3922%" y="527.50">RustyPython.exe`RustyPython::evaluator::evaluate</text></g><g><title>RustyPython.exe`RustyPython::pyarena::PyArena::new (2 samples, 0.28%)</title><rect x="95.1636%" y="501" width="0.2845%" height="15" fill="rgb(246,46,29)" fg:x="669" fg:w="2"/><text x="95.4136%" y="511.50"></text></g><g><title>RustyPython.exe`RustyPython::builtins::globals::Globals::new (2 samples, 0.28%)</title><rect x="95.1636%" y="485" width="0.2845%" height="15" fill="rgb(246,185,52)" fg:x="669" fg:w="2"/><text x="95.4136%" y="495.50"></text></g><g><title>RustyPython.exe`RustyPython::builtins::types::object::get_object_class (2 samples, 0.28%)</title><rect x="95.1636%" y="469" width="0.2845%" height="15" fill="rgb(252,136,11)" fg:x="669" fg:w="2"/><text x="95.4136%" y="479.50"></text></g><g><title>RustyPython.exe`ahash::hash_map::AHashMap&lt;alloc::string::String,enum2$&lt;RustyPython::builtins::structure::pyobject::PyObject&gt;,ahash::random_state::RandomState&gt;::new (2 samples, 0.28%)</title><rect x="95.1636%" y="453" width="0.2845%" height="15" fill="rgb(219,138,53)" fg:x="669" fg:w="2"/><text x="95.4136%" y="463.50"></text></g><g><title>RustyPython.exe`ahash::random_state::RandomState::new (2 samples, 0.28%)</title><rect x="95.1636%" y="437" width="0.2845%" height="15" fill="rgb(211,51,23)" fg:x="669" fg:w="2"/><text x="95.4136%" y="447.50"></text></g><g><title>RustyPython.exe`once_cell::race::once_box::OnceBox&lt;array$&lt;array$&lt;u64,4&gt;,2&gt; &gt;::get_or_try_init&lt;array$&lt;array$&lt;u64,4&gt;,2&gt;,once_cell::race::once_box::impl$3::get_or_init::closure_env$0&lt;array$&lt;array$&lt;u64,4&gt;,2&gt;,ahash::random_state::get_fixed_seeds::closure_env$0&gt;,enum2$&lt;once_cell::race::once_box::impl$3::get_or_init::Void&gt; &gt;(once_cell::race::once_box::impl$3::get_or_init::closure_env$0&lt;array$&lt;array$ (2 samples, 0.28%)</title><rect x="95.1636%" y="421" width="0.2845%" height="15" fill="rgb(247,221,28)" fg:x="669" fg:w="2"/><text x="95.4136%" y="431.50"></text></g><g><title>RustyPython.exe`once_cell::race::once_box::impl$3::get_or_init::closure$0(once_cell::race::once_box::impl$3::get_or_init::closure_env$0&lt;array$&lt;array$ (2 samples, 0.28%)</title><rect x="95.1636%" y="405" width="0.2845%" height="15" fill="rgb(251,222,45)" fg:x="669" fg:w="2"/><text x="95.4136%" y="415.50"></text></g><g><title>RustyPython.exe`ahash::random_state::get_fixed_seeds::closure$0 (2 samples, 0.28%)</title><rect x="95.1636%" y="389" width="0.2845%" height="15" fill="rgb(217,162,53)" fg:x="669" fg:w="2"/><text x="95.4136%" y="399.50"></text></g><g><title>RustyPython.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,getrandom::error::Error&gt; &gt;::expect(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,getrandom::error::Error&gt; &gt;, ref$ (2 samples, 0.28%)</title><rect x="95.1636%" y="373" width="0.2845%" height="15" fill="rgb(229,93,14)" fg:x="669" fg:w="2"/><text x="95.4136%" y="383.50"></text></g><g><title>RustyPython.exe`getrandom::imp::getrandom_inner(ref_mut$&lt;slice2$&lt;core::mem::maybe_uninit::MaybeUninit (2 samples, 0.28%)</title><rect x="95.1636%" y="357" width="0.2845%" height="15" fill="rgb(209,67,49)" fg:x="669" fg:w="2"/><text x="95.4136%" y="367.50"></text></g><g><title>`0x7FFD3CEB14AC (2 samples, 0.28%)</title><rect x="95.1636%" y="341" width="0.2845%" height="15" fill="rgb(213,87,29)" fg:x="669" fg:w="2"/><text x="95.4136%" y="351.50"></text></g><g><title>`0x7FFD3CEB15DD (2 samples, 0.28%)</title><rect x="95.1636%" y="325" width="0.2845%" height="15" fill="rgb(205,151,52)" fg:x="669" fg:w="2"/><text x="95.4136%" y="335.50"></text></g><g><title>`0x7FFD3CEB1714 (2 samples, 0.28%)</title><rect x="95.1636%" y="309" width="0.2845%" height="15" fill="rgb(253,215,39)" fg:x="669" fg:w="2"/><text x="95.4136%" y="319.50"></text></g><g><title>`0x7FFD3CEB2507 (2 samples, 0.28%)</title><rect x="95.1636%" y="293" width="0.2845%" height="15" fill="rgb(221,220,41)" fg:x="669" fg:w="2"/><text x="95.4136%" y="303.50"></text></g><g><title>`0x7FFD3CEB3562 (2 samples, 0.28%)</title><rect x="95.1636%" y="277" width="0.2845%" height="15" fill="rgb(218,133,21)" fg:x="669" fg:w="2"/><text x="95.4136%" y="287.50"></text></g><g><title>`0x7FFD3CEB1A0C (2 samples, 0.28%)</title><rect x="95.1636%" y="261" width="0.2845%" height="15" fill="rgb(221,193,43)" fg:x="669" fg:w="2"/><text x="95.4136%" y="271.50"></text></g><g><title>`0x7FFD3D6722C6 (2 samples, 0.28%)</title><rect x="95.1636%" y="245" width="0.2845%" height="15" fill="rgb(240,128,52)" fg:x="669" fg:w="2"/><text x="95.4136%" y="255.50"></text></g><g><title>`0x7FFD4024A650 (2 samples, 0.28%)</title><rect x="95.1636%" y="229" width="0.2845%" height="15" fill="rgb(253,114,12)" fg:x="669" fg:w="2"/><text x="95.4136%" y="239.50"></text></g><g><title>`0x7FFD4023ED20 (2 samples, 0.28%)</title><rect x="95.1636%" y="213" width="0.2845%" height="15" fill="rgb(215,223,47)" fg:x="669" fg:w="2"/><text x="95.4136%" y="223.50"></text></g><g><title>`0x7FFD4023F114 (1 samples, 0.14%)</title><rect x="95.3058%" y="197" width="0.1422%" height="15" fill="rgb(248,225,23)" fg:x="670" fg:w="1"/><text x="95.5558%" y="207.50"></text></g><g><title>`0x7FFD402A15C3 (1 samples, 0.14%)</title><rect x="95.3058%" y="181" width="0.1422%" height="15" fill="rgb(250,108,0)" fg:x="670" fg:w="1"/><text x="95.5558%" y="191.50"></text></g><g><title>`0x7FFD402A18DA (1 samples, 0.14%)</title><rect x="95.3058%" y="165" width="0.1422%" height="15" fill="rgb(228,208,7)" fg:x="670" fg:w="1"/><text x="95.5558%" y="175.50"></text></g><g><title>`0x7FFD401F142C (1 samples, 0.14%)</title><rect x="95.3058%" y="149" width="0.1422%" height="15" fill="rgb(244,45,10)" fg:x="670" fg:w="1"/><text x="95.5558%" y="159.50"></text></g><g><title>`0x7FFD401F2080 (1 samples, 0.14%)</title><rect x="95.3058%" y="133" width="0.1422%" height="15" fill="rgb(207,125,25)" fg:x="670" fg:w="1"/><text x="95.5558%" y="143.50"></text></g><g><title>`0x7FFD3DC58562 (1 samples, 0.14%)</title><rect x="95.3058%" y="117" width="0.1422%" height="15" fill="rgb(210,195,18)" fg:x="670" fg:w="1"/><text x="95.5558%" y="127.50"></text></g><g><title>`0x7FFD3DC588E8 (1 samples, 0.14%)</title><rect x="95.3058%" y="101" width="0.1422%" height="15" fill="rgb(249,80,12)" fg:x="670" fg:w="1"/><text x="95.5558%" y="111.50"></text></g><g><title>`0x7FFD3DC5D65F (1 samples, 0.14%)</title><rect x="95.3058%" y="85" width="0.1422%" height="15" fill="rgb(221,65,9)" fg:x="670" fg:w="1"/><text x="95.5558%" y="95.50"></text></g><g><title>`0x7FFD3D68AF35 (1 samples, 0.14%)</title><rect x="95.3058%" y="69" width="0.1422%" height="15" fill="rgb(235,49,36)" fg:x="670" fg:w="1"/><text x="95.5558%" y="79.50"></text></g><g><title>`0x7FFD4022E5BD (1 samples, 0.14%)</title><rect x="95.3058%" y="53" width="0.1422%" height="15" fill="rgb(225,32,20)" fg:x="670" fg:w="1"/><text x="95.5558%" y="63.50"></text></g><g><title>RustyPython.exe`RustyPython::parser::python_parser::code_traced(ref$ (1 samples, 0.14%)</title><rect x="95.4481%" y="517" width="0.1422%" height="15" fill="rgb(215,141,46)" fg:x="671" fg:w="1"/><text x="95.6981%" y="527.50"></text></g><g><title>RustyPython.exe`RustyPython::parser::python_parser::__parse_code_traced(ref$ (1 samples, 0.14%)</title><rect x="95.4481%" y="501" width="0.1422%" height="15" fill="rgb(250,160,47)" fg:x="671" fg:w="1"/><text x="95.6981%" y="511.50"></text></g><g><title>RustyPython.exe`RustyPython::parser::python_parser::__parse_traced(ref$ (1 samples, 0.14%)</title><rect x="95.4481%" y="485" width="0.1422%" height="15" fill="rgb(216,222,40)" fg:x="671" fg:w="1"/><text x="95.6981%" y="495.50"></text></g><g><title>RustyPython.exe`RustyPython::parser::python_parser::__parse_code(ref$ (1 samples, 0.14%)</title><rect x="95.4481%" y="469" width="0.1422%" height="15" fill="rgb(234,217,39)" fg:x="671" fg:w="1"/><text x="95.6981%" y="479.50"></text></g><g><title>RustyPython.exe`RustyPython::parser::python_parser::__parse_statement(ref$ (1 samples, 0.14%)</title><rect x="95.4481%" y="453" width="0.1422%" height="15" fill="rgb(207,178,40)" fg:x="671" fg:w="1"/><text x="95.6981%" y="463.50"></text></g><g><title>RustyPython.exe`RustyPython::parser::python_parser::__parse_code(ref$ (1 samples, 0.14%)</title><rect x="95.4481%" y="437" width="0.1422%" height="15" fill="rgb(221,136,13)" fg:x="671" fg:w="1"/><text x="95.6981%" y="447.50"></text></g><g><title>RustyPython.exe`RustyPython::parser::python_parser::__parse_statement(ref$ (1 samples, 0.14%)</title><rect x="95.4481%" y="421" width="0.1422%" height="15" fill="rgb(249,199,10)" fg:x="671" fg:w="1"/><text x="95.6981%" y="431.50"></text></g><g><title>RustyPython.exe`RustyPython::parser::python_parser::__parse_code(ref$ (1 samples, 0.14%)</title><rect x="95.4481%" y="405" width="0.1422%" height="15" fill="rgb(249,222,13)" fg:x="671" fg:w="1"/><text x="95.6981%" y="415.50"></text></g><g><title>RustyPython.exe`alloc::vec::Vec&lt;enum2$&lt;RustyPython::parser::Statement&gt;,alloc::alloc::Global&gt;::push(enum2$ (1 samples, 0.14%)</title><rect x="95.4481%" y="389" width="0.1422%" height="15" fill="rgb(244,185,38)" fg:x="671" fg:w="1"/><text x="95.6981%" y="399.50"></text></g><g><title>RustyPython.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;RustyPython::parser::Statement&gt;,alloc::alloc::Global&gt;::grow_one&lt;enum2$&lt;RustyPython::parser::Statement&gt;,alloc::alloc::Global&gt; (1 samples, 0.14%)</title><rect x="95.4481%" y="373" width="0.1422%" height="15" fill="rgb(236,202,9)" fg:x="671" fg:w="1"/><text x="95.6981%" y="383.50"></text></g><g><title>RustyPython.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (1 samples, 0.14%)</title><rect x="95.4481%" y="357" width="0.1422%" height="15" fill="rgb(250,229,37)" fg:x="671" fg:w="1"/><text x="95.6981%" y="367.50"></text></g><g><title>RustyPython.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.14%)</title><rect x="95.4481%" y="341" width="0.1422%" height="15" fill="rgb(206,174,23)" fg:x="671" fg:w="1"/><text x="95.6981%" y="351.50"></text></g><g><title>RustyPython.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.14%)</title><rect x="95.4481%" y="325" width="0.1422%" height="15" fill="rgb(211,33,43)" fg:x="671" fg:w="1"/><text x="95.6981%" y="335.50"></text></g><g><title>RustyPython.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.14%)</title><rect x="95.4481%" y="309" width="0.1422%" height="15" fill="rgb(245,58,50)" fg:x="671" fg:w="1"/><text x="95.6981%" y="319.50"></text></g><g><title>RustyPython.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.14%)</title><rect x="95.4481%" y="293" width="0.1422%" height="15" fill="rgb(244,68,36)" fg:x="671" fg:w="1"/><text x="95.6981%" y="303.50"></text></g><g><title>RustyPython.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 0.14%)</title><rect x="95.4481%" y="277" width="0.1422%" height="15" fill="rgb(232,229,15)" fg:x="671" fg:w="1"/><text x="95.6981%" y="287.50"></text></g><g><title>RustyPython.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 0.14%)</title><rect x="95.4481%" y="261" width="0.1422%" height="15" fill="rgb(254,30,23)" fg:x="671" fg:w="1"/><text x="95.6981%" y="271.50"></text></g><g><title>`0x7FFD401FBE86 (1 samples, 0.14%)</title><rect x="95.4481%" y="245" width="0.1422%" height="15" fill="rgb(235,160,14)" fg:x="671" fg:w="1"/><text x="95.6981%" y="255.50"></text></g><g><title>`0x7FFD401FC20E (1 samples, 0.14%)</title><rect x="95.4481%" y="229" width="0.1422%" height="15" fill="rgb(212,155,44)" fg:x="671" fg:w="1"/><text x="95.6981%" y="239.50"></text></g><g><title>`0x7FFD4022A780 (1 samples, 0.14%)</title><rect x="95.4481%" y="213" width="0.1422%" height="15" fill="rgb(226,2,50)" fg:x="671" fg:w="1"/><text x="95.6981%" y="223.50"></text></g><g><title>`0x7FFD4022BCAF (1 samples, 0.14%)</title><rect x="95.4481%" y="197" width="0.1422%" height="15" fill="rgb(234,177,6)" fg:x="671" fg:w="1"/><text x="95.6981%" y="207.50"></text></g><g><title>`0x7FFD4022C543 (1 samples, 0.14%)</title><rect x="95.4481%" y="181" width="0.1422%" height="15" fill="rgb(217,24,9)" fg:x="671" fg:w="1"/><text x="95.6981%" y="191.50"></text></g><g><title>`0x7FFD4033FAD4 (1 samples, 0.14%)</title><rect x="95.4481%" y="165" width="0.1422%" height="15" fill="rgb(220,13,46)" fg:x="671" fg:w="1"/><text x="95.6981%" y="175.50"></text></g><g><title>RustyPython.exe`invoke_main() (672 samples, 95.59%)</title><rect x="0.1422%" y="677" width="95.5903%" height="15" fill="rgb(239,221,27)" fg:x="1" fg:w="672"/><text x="0.3922%" y="687.50">RustyPython.exe`invoke_main()</text></g><g><title>RustyPython.exe`main (672 samples, 95.59%)</title><rect x="0.1422%" y="661" width="95.5903%" height="15" fill="rgb(222,198,25)" fg:x="1" fg:w="672"/><text x="0.3922%" y="671.50">RustyPython.exe`main</text></g><g><title>RustyPython.exe`std::rt::lang_start_internal (672 samples, 95.59%)</title><rect x="0.1422%" y="645" width="95.5903%" height="15" fill="rgb(211,99,13)" fg:x="1" fg:w="672"/><text x="0.3922%" y="655.50">RustyPython.exe`std::rt::lang_start_internal</text></g><g><title>RustyPython.exe`std::panic::catch_unwind (672 samples, 95.59%)</title><rect x="0.1422%" y="629" width="95.5903%" height="15" fill="rgb(232,111,31)" fg:x="1" fg:w="672"/><text x="0.3922%" y="639.50">RustyPython.exe`std::panic::catch_unwind</text></g><g><title>RustyPython.exe`std::panicking::try (672 samples, 95.59%)</title><rect x="0.1422%" y="613" width="95.5903%" height="15" fill="rgb(245,82,37)" fg:x="1" fg:w="672"/><text x="0.3922%" y="623.50">RustyPython.exe`std::panicking::try</text></g><g><title>RustyPython.exe`std::panicking::try::do_call (672 samples, 95.59%)</title><rect x="0.1422%" y="597" width="95.5903%" height="15" fill="rgb(227,149,46)" fg:x="1" fg:w="672"/><text x="0.3922%" y="607.50">RustyPython.exe`std::panicking::try::do_call</text></g><g><title>RustyPython.exe`std::rt::lang_start_internal::closure$0 (672 samples, 95.59%)</title><rect x="0.1422%" y="581" width="95.5903%" height="15" fill="rgb(218,36,50)" fg:x="1" fg:w="672"/><text x="0.3922%" y="591.50">RustyPython.exe`std::rt::lang_start_internal::closure$0</text></g><g><title>RustyPython.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (672 samples, 95.59%)</title><rect x="0.1422%" y="565" width="95.5903%" height="15" fill="rgb(226,80,48)" fg:x="1" fg:w="672"/><text x="0.3922%" y="575.50">RustyPython.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$</text></g><g><title>RustyPython.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (672 samples, 95.59%)</title><rect x="0.1422%" y="549" width="95.5903%" height="15" fill="rgb(238,224,15)" fg:x="1" fg:w="672"/><text x="0.3922%" y="559.50">RustyPython.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>RustyPython.exe`RustyPython::main (672 samples, 95.59%)</title><rect x="0.1422%" y="533" width="95.5903%" height="15" fill="rgb(241,136,10)" fg:x="1" fg:w="672"/><text x="0.3922%" y="543.50">RustyPython.exe`RustyPython::main</text></g><g><title>RustyPython.exe`std::fs::File::open (1 samples, 0.14%)</title><rect x="95.5903%" y="517" width="0.1422%" height="15" fill="rgb(208,32,45)" fg:x="672" fg:w="1"/><text x="95.8403%" y="527.50"></text></g><g><title>RustyPython.exe`core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="95.5903%" y="501" width="0.1422%" height="15" fill="rgb(207,135,9)" fg:x="672" fg:w="1"/><text x="95.8403%" y="511.50"></text></g><g><title>RustyPython.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.14%)</title><rect x="95.5903%" y="485" width="0.1422%" height="15" fill="rgb(206,86,44)" fg:x="672" fg:w="1"/><text x="95.8403%" y="495.50"></text></g><g><title>RustyPython.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.14%)</title><rect x="95.5903%" y="469" width="0.1422%" height="15" fill="rgb(245,177,15)" fg:x="672" fg:w="1"/><text x="95.8403%" y="479.50"></text></g><g><title>RustyPython.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (1 samples, 0.14%)</title><rect x="95.5903%" y="453" width="0.1422%" height="15" fill="rgb(206,64,50)" fg:x="672" fg:w="1"/><text x="95.8403%" y="463.50"></text></g><g><title>RustyPython.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (1 samples, 0.14%)</title><rect x="95.5903%" y="437" width="0.1422%" height="15" fill="rgb(234,36,40)" fg:x="672" fg:w="1"/><text x="95.8403%" y="447.50"></text></g><g><title>RustyPython.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::current_memory (1 samples, 0.14%)</title><rect x="95.5903%" y="421" width="0.1422%" height="15" fill="rgb(213,64,8)" fg:x="672" fg:w="1"/><text x="95.8403%" y="431.50"></text></g><g><title>RustyPython.exe`std::fs::OpenOptions::_open (1 samples, 0.14%)</title><rect x="95.5903%" y="405" width="0.1422%" height="15" fill="rgb(210,75,36)" fg:x="672" fg:w="1"/><text x="95.8403%" y="415.50"></text></g><g><title>RustyPython.exe`std::sys::pal::windows::fs::File::open (1 samples, 0.14%)</title><rect x="95.5903%" y="389" width="0.1422%" height="15" fill="rgb(229,88,21)" fg:x="672" fg:w="1"/><text x="95.8403%" y="399.50"></text></g><g><title>RustyPython.exe`core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="95.5903%" y="373" width="0.1422%" height="15" fill="rgb(252,204,47)" fg:x="672" fg:w="1"/><text x="95.8403%" y="383.50"></text></g><g><title>RustyPython.exe`core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="95.5903%" y="357" width="0.1422%" height="15" fill="rgb(208,77,27)" fg:x="672" fg:w="1"/><text x="95.8403%" y="367.50"></text></g><g><title>RustyPython.exe`alloc::raw_vec::impl$3::drop (1 samples, 0.14%)</title><rect x="95.5903%" y="341" width="0.1422%" height="15" fill="rgb(221,76,26)" fg:x="672" fg:w="1"/><text x="95.8403%" y="351.50"></text></g><g><title>RustyPython.exe`alloc::raw_vec::RawVecInner::deallocate (1 samples, 0.14%)</title><rect x="95.5903%" y="325" width="0.1422%" height="15" fill="rgb(225,139,18)" fg:x="672" fg:w="1"/><text x="95.8403%" y="335.50"></text></g><g><title>RustyPython.exe`alloc::raw_vec::RawVecInner::current_memory (1 samples, 0.14%)</title><rect x="95.5903%" y="309" width="0.1422%" height="15" fill="rgb(230,137,11)" fg:x="672" fg:w="1"/><text x="95.8403%" y="319.50"></text></g><g><title>RustyPython.exe`std::sys::pal::windows::fs::File::open_native (1 samples, 0.14%)</title><rect x="95.5903%" y="293" width="0.1422%" height="15" fill="rgb(212,28,1)" fg:x="672" fg:w="1"/><text x="95.8403%" y="303.50"></text></g><g><title>RustyPython.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.14%)</title><rect x="95.5903%" y="277" width="0.1422%" height="15" fill="rgb(248,164,17)" fg:x="672" fg:w="1"/><text x="95.8403%" y="287.50"></text></g><g><title>RustyPython.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.14%)</title><rect x="95.5903%" y="261" width="0.1422%" height="15" fill="rgb(222,171,42)" fg:x="672" fg:w="1"/><text x="95.8403%" y="271.50"></text></g><g><title>`0x7FFD3D6CCA2B (1 samples, 0.14%)</title><rect x="95.5903%" y="245" width="0.1422%" height="15" fill="rgb(243,84,45)" fg:x="672" fg:w="1"/><text x="95.8403%" y="255.50"></text></g><g><title>`0x7FFD3D6CCD8B (1 samples, 0.14%)</title><rect x="95.5903%" y="229" width="0.1422%" height="15" fill="rgb(252,49,23)" fg:x="672" fg:w="1"/><text x="95.8403%" y="239.50"></text></g><g><title>`0x7FFD40340274 (1 samples, 0.14%)</title><rect x="95.5903%" y="213" width="0.1422%" height="15" fill="rgb(215,19,7)" fg:x="672" fg:w="1"/><text x="95.8403%" y="223.50"></text></g><g><title>`0x7FFD4023F082 (1 samples, 0.14%)</title><rect x="95.7326%" y="565" width="0.1422%" height="15" fill="rgb(238,81,41)" fg:x="673" fg:w="1"/><text x="95.9826%" y="575.50"></text></g><g><title>`0x7FFD401FAE61 (1 samples, 0.14%)</title><rect x="95.7326%" y="549" width="0.1422%" height="15" fill="rgb(210,199,37)" fg:x="673" fg:w="1"/><text x="95.9826%" y="559.50"></text></g><g><title>`0x7FFD4023B997 (1 samples, 0.14%)</title><rect x="95.8748%" y="517" width="0.1422%" height="15" fill="rgb(244,192,49)" fg:x="674" fg:w="1"/><text x="96.1248%" y="527.50"></text></g><g><title>`0x7FFD4033FE34 (1 samples, 0.14%)</title><rect x="95.8748%" y="501" width="0.1422%" height="15" fill="rgb(226,211,11)" fg:x="674" fg:w="1"/><text x="96.1248%" y="511.50"></text></g><g><title>`0x7FFD3DB600F6 (3 samples, 0.43%)</title><rect x="95.7326%" y="677" width="0.4267%" height="15" fill="rgb(236,162,54)" fg:x="673" fg:w="3"/><text x="95.9826%" y="687.50"></text></g><g><title>`0x7FFD3DB455ED (3 samples, 0.43%)</title><rect x="95.7326%" y="661" width="0.4267%" height="15" fill="rgb(220,229,9)" fg:x="673" fg:w="3"/><text x="95.9826%" y="671.50"></text></g><g><title>`0x7FFD3DAD423B (3 samples, 0.43%)</title><rect x="95.7326%" y="645" width="0.4267%" height="15" fill="rgb(250,87,22)" fg:x="673" fg:w="3"/><text x="95.9826%" y="655.50"></text></g><g><title>`0x7FFD3DB363F5 (3 samples, 0.43%)</title><rect x="95.7326%" y="629" width="0.4267%" height="15" fill="rgb(239,43,17)" fg:x="673" fg:w="3"/><text x="95.9826%" y="639.50"></text></g><g><title>`0x7FFD3D6722C6 (3 samples, 0.43%)</title><rect x="95.7326%" y="613" width="0.4267%" height="15" fill="rgb(231,177,25)" fg:x="673" fg:w="3"/><text x="95.9826%" y="623.50"></text></g><g><title>`0x7FFD4024A650 (3 samples, 0.43%)</title><rect x="95.7326%" y="597" width="0.4267%" height="15" fill="rgb(219,179,1)" fg:x="673" fg:w="3"/><text x="95.9826%" y="607.50"></text></g><g><title>`0x7FFD4023ED20 (3 samples, 0.43%)</title><rect x="95.7326%" y="581" width="0.4267%" height="15" fill="rgb(238,219,53)" fg:x="673" fg:w="3"/><text x="95.9826%" y="591.50"></text></g><g><title>`0x7FFD4023F0A0 (2 samples, 0.28%)</title><rect x="95.8748%" y="565" width="0.2845%" height="15" fill="rgb(232,167,36)" fg:x="674" fg:w="2"/><text x="96.1248%" y="575.50"></text></g><g><title>`0x7FFD4023A3B4 (2 samples, 0.28%)</title><rect x="95.8748%" y="549" width="0.2845%" height="15" fill="rgb(244,19,51)" fg:x="674" fg:w="2"/><text x="96.1248%" y="559.50"></text></g><g><title>`0x7FFD4023A99D (2 samples, 0.28%)</title><rect x="95.8748%" y="533" width="0.2845%" height="15" fill="rgb(224,6,22)" fg:x="674" fg:w="2"/><text x="96.1248%" y="543.50"></text></g><g><title>`0x7FFD4023BAEC (1 samples, 0.14%)</title><rect x="96.0171%" y="517" width="0.1422%" height="15" fill="rgb(224,145,5)" fg:x="675" fg:w="1"/><text x="96.2671%" y="527.50"></text></g><g><title>`0x7FFD401E63C9 (1 samples, 0.14%)</title><rect x="96.0171%" y="501" width="0.1422%" height="15" fill="rgb(234,130,49)" fg:x="675" fg:w="1"/><text x="96.2671%" y="511.50"></text></g><g><title>`0x7FFD402407C2 (1 samples, 0.14%)</title><rect x="96.0171%" y="485" width="0.1422%" height="15" fill="rgb(254,6,2)" fg:x="675" fg:w="1"/><text x="96.2671%" y="495.50"></text></g><g><title>`0x7FFD4024853F (1 samples, 0.14%)</title><rect x="96.0171%" y="469" width="0.1422%" height="15" fill="rgb(208,96,46)" fg:x="675" fg:w="1"/><text x="96.2671%" y="479.50"></text></g><g><title>`0x7FFD3DC585D7 (1 samples, 0.14%)</title><rect x="96.1593%" y="597" width="0.1422%" height="15" fill="rgb(239,3,39)" fg:x="676" fg:w="1"/><text x="96.4093%" y="607.50"></text></g><g><title>`0x7FFD3DC58E06 (1 samples, 0.14%)</title><rect x="96.1593%" y="581" width="0.1422%" height="15" fill="rgb(233,210,1)" fg:x="676" fg:w="1"/><text x="96.4093%" y="591.50"></text></g><g><title>`0x7FFD3DC58E8A (1 samples, 0.14%)</title><rect x="96.1593%" y="565" width="0.1422%" height="15" fill="rgb(244,137,37)" fg:x="676" fg:w="1"/><text x="96.4093%" y="575.50"></text></g><g><title>`0x7FFD3DC58FDB (1 samples, 0.14%)</title><rect x="96.1593%" y="549" width="0.1422%" height="15" fill="rgb(240,136,2)" fg:x="676" fg:w="1"/><text x="96.4093%" y="559.50"></text></g><g><title>`0x7FFD3DC241F0 (1 samples, 0.14%)</title><rect x="96.1593%" y="533" width="0.1422%" height="15" fill="rgb(239,18,37)" fg:x="676" fg:w="1"/><text x="96.4093%" y="543.50"></text></g><g><title>RustyPython.exe`__scrt_common_main_seh() (677 samples, 96.30%)</title><rect x="0.1422%" y="693" width="96.3016%" height="15" fill="rgb(218,185,22)" fg:x="1" fg:w="677"/><text x="0.3922%" y="703.50">RustyPython.exe`__scrt_common_main_seh()</text></g><g><title>`0x7FFD3DB60143 (2 samples, 0.28%)</title><rect x="96.1593%" y="677" width="0.2845%" height="15" fill="rgb(225,218,4)" fg:x="676" fg:w="2"/><text x="96.4093%" y="687.50"></text></g><g><title>`0x7FFD3E9418AB (2 samples, 0.28%)</title><rect x="96.1593%" y="661" width="0.2845%" height="15" fill="rgb(230,182,32)" fg:x="676" fg:w="2"/><text x="96.4093%" y="671.50"></text></g><g><title>`0x7FFD4029C0E4 (2 samples, 0.28%)</title><rect x="96.1593%" y="645" width="0.2845%" height="15" fill="rgb(242,56,43)" fg:x="676" fg:w="2"/><text x="96.4093%" y="655.50"></text></g><g><title>`0x7FFD4029CF20 (2 samples, 0.28%)</title><rect x="96.1593%" y="629" width="0.2845%" height="15" fill="rgb(233,99,24)" fg:x="676" fg:w="2"/><text x="96.4093%" y="639.50"></text></g><g><title>`0x7FFD401F2080 (2 samples, 0.28%)</title><rect x="96.1593%" y="613" width="0.2845%" height="15" fill="rgb(234,209,42)" fg:x="676" fg:w="2"/><text x="96.4093%" y="623.50"></text></g><g><title>`0x7FFD3E090A42 (1 samples, 0.14%)</title><rect x="96.3016%" y="597" width="0.1422%" height="15" fill="rgb(227,7,12)" fg:x="677" fg:w="1"/><text x="96.5516%" y="607.50"></text></g><g><title>`0x7FFD3E090B35 (1 samples, 0.14%)</title><rect x="96.3016%" y="581" width="0.1422%" height="15" fill="rgb(245,203,43)" fg:x="677" fg:w="1"/><text x="96.5516%" y="591.50"></text></g><g><title>`0x7FFD40210A08 (1 samples, 0.14%)</title><rect x="96.3016%" y="565" width="0.1422%" height="15" fill="rgb(238,205,33)" fg:x="677" fg:w="1"/><text x="96.5516%" y="575.50"></text></g><g><title>`0x7FFD4033F9B4 (1 samples, 0.14%)</title><rect x="96.3016%" y="549" width="0.1422%" height="15" fill="rgb(231,56,7)" fg:x="677" fg:w="1"/><text x="96.5516%" y="559.50"></text></g><g><title>`0x7FFD40245D2E (1 samples, 0.14%)</title><rect x="96.4438%" y="693" width="0.1422%" height="15" fill="rgb(244,186,29)" fg:x="678" fg:w="1"/><text x="96.6938%" y="703.50"></text></g><g><title>`0x7FFD40343484 (1 samples, 0.14%)</title><rect x="96.4438%" y="677" width="0.1422%" height="15" fill="rgb(234,111,31)" fg:x="678" fg:w="1"/><text x="96.6938%" y="687.50"></text></g><g><title>`0x7FFD4023B1B0 (2 samples, 0.28%)</title><rect x="96.5861%" y="613" width="0.2845%" height="15" fill="rgb(241,149,10)" fg:x="679" fg:w="2"/><text x="96.8361%" y="623.50"></text></g><g><title>`0x7FFD4023B4E3 (2 samples, 0.28%)</title><rect x="96.5861%" y="597" width="0.2845%" height="15" fill="rgb(249,206,44)" fg:x="679" fg:w="2"/><text x="96.8361%" y="607.50"></text></g><g><title>`0x7FFD4033FF74 (2 samples, 0.28%)</title><rect x="96.5861%" y="581" width="0.2845%" height="15" fill="rgb(251,153,30)" fg:x="679" fg:w="2"/><text x="96.8361%" y="591.50"></text></g><g><title>`0x7FFD4023A581 (3 samples, 0.43%)</title><rect x="96.5861%" y="645" width="0.4267%" height="15" fill="rgb(239,152,38)" fg:x="679" fg:w="3"/><text x="96.8361%" y="655.50"></text></g><g><title>`0x7FFD4023AC59 (3 samples, 0.43%)</title><rect x="96.5861%" y="629" width="0.4267%" height="15" fill="rgb(249,139,47)" fg:x="679" fg:w="3"/><text x="96.8361%" y="639.50"></text></g><g><title>`0x7FFD4023B3B7 (1 samples, 0.14%)</title><rect x="96.8706%" y="613" width="0.1422%" height="15" fill="rgb(244,64,35)" fg:x="681" fg:w="1"/><text x="97.1206%" y="623.50"></text></g><g><title>`0x7FFD401F9376 (1 samples, 0.14%)</title><rect x="96.8706%" y="597" width="0.1422%" height="15" fill="rgb(216,46,15)" fg:x="681" fg:w="1"/><text x="97.1206%" y="607.50"></text></g><g><title>`0x7FFD401F97D9 (1 samples, 0.14%)</title><rect x="96.8706%" y="581" width="0.1422%" height="15" fill="rgb(250,74,19)" fg:x="681" fg:w="1"/><text x="97.1206%" y="591.50"></text></g><g><title>`0x7FFD40305211 (1 samples, 0.14%)</title><rect x="96.8706%" y="565" width="0.1422%" height="15" fill="rgb(249,42,33)" fg:x="681" fg:w="1"/><text x="97.1206%" y="575.50"></text></g><g><title>`0x7FFD40305298 (1 samples, 0.14%)</title><rect x="96.8706%" y="549" width="0.1422%" height="15" fill="rgb(242,149,17)" fg:x="681" fg:w="1"/><text x="97.1206%" y="559.50"></text></g><g><title>`0x7FFD4030BCCF (1 samples, 0.14%)</title><rect x="96.8706%" y="533" width="0.1422%" height="15" fill="rgb(244,29,21)" fg:x="681" fg:w="1"/><text x="97.1206%" y="543.50"></text></g><g><title>`0x7FFD4030EAA0 (1 samples, 0.14%)</title><rect x="96.8706%" y="517" width="0.1422%" height="15" fill="rgb(220,130,37)" fg:x="681" fg:w="1"/><text x="97.1206%" y="527.50"></text></g><g><title>`0x7FFD4029BF2C (682 samples, 97.01%)</title><rect x="0.1422%" y="725" width="97.0128%" height="15" fill="rgb(211,67,2)" fg:x="1" fg:w="682"/><text x="0.3922%" y="735.50">`0x7FFD4029BF2C</text></g><g><title>`0x7FFD3E92E8D7 (682 samples, 97.01%)</title><rect x="0.1422%" y="709" width="97.0128%" height="15" fill="rgb(235,68,52)" fg:x="1" fg:w="682"/><text x="0.3922%" y="719.50">`0x7FFD3E92E8D7</text></g><g><title>`0x7FFD402461B1 (4 samples, 0.57%)</title><rect x="96.5861%" y="693" width="0.5690%" height="15" fill="rgb(246,142,3)" fg:x="679" fg:w="4"/><text x="96.8361%" y="703.50"></text></g><g><title>`0x7FFD40244757 (4 samples, 0.57%)</title><rect x="96.5861%" y="677" width="0.5690%" height="15" fill="rgb(241,25,7)" fg:x="679" fg:w="4"/><text x="96.8361%" y="687.50"></text></g><g><title>`0x7FFD4023A2DA (4 samples, 0.57%)</title><rect x="96.5861%" y="661" width="0.5690%" height="15" fill="rgb(242,119,39)" fg:x="679" fg:w="4"/><text x="96.8361%" y="671.50"></text></g><g><title>`0x7FFD4023A6AC (1 samples, 0.14%)</title><rect x="97.0128%" y="645" width="0.1422%" height="15" fill="rgb(241,98,45)" fg:x="682" fg:w="1"/><text x="97.2628%" y="655.50"></text></g><g><title>`0x7FFD4023BAEC (1 samples, 0.14%)</title><rect x="97.0128%" y="629" width="0.1422%" height="15" fill="rgb(254,28,30)" fg:x="682" fg:w="1"/><text x="97.2628%" y="639.50"></text></g><g><title>`0x7FFD401E635C (1 samples, 0.14%)</title><rect x="97.0128%" y="613" width="0.1422%" height="15" fill="rgb(241,142,54)" fg:x="682" fg:w="1"/><text x="97.2628%" y="623.50"></text></g><g><title>`0x7FFD401E6EE1 (1 samples, 0.14%)</title><rect x="97.0128%" y="597" width="0.1422%" height="15" fill="rgb(222,85,15)" fg:x="682" fg:w="1"/><text x="97.2628%" y="607.50"></text></g><g><title>`0x7FFD401E8408 (1 samples, 0.14%)</title><rect x="97.0128%" y="581" width="0.1422%" height="15" fill="rgb(210,85,47)" fg:x="682" fg:w="1"/><text x="97.2628%" y="591.50"></text></g><g><title>`0x7FFD401EBE1B (1 samples, 0.14%)</title><rect x="97.0128%" y="565" width="0.1422%" height="15" fill="rgb(224,206,25)" fg:x="682" fg:w="1"/><text x="97.2628%" y="575.50"></text></g><g><title>`0x7FFD402D342E (1 samples, 0.14%)</title><rect x="97.1550%" y="709" width="0.1422%" height="15" fill="rgb(243,201,19)" fg:x="683" fg:w="1"/><text x="97.4050%" y="719.50"></text></g><g><title>`0x7FFD402D3525 (1 samples, 0.14%)</title><rect x="97.1550%" y="693" width="0.1422%" height="15" fill="rgb(236,59,4)" fg:x="683" fg:w="1"/><text x="97.4050%" y="703.50"></text></g><g><title>`0x7FFD401E9725 (1 samples, 0.14%)</title><rect x="97.1550%" y="677" width="0.1422%" height="15" fill="rgb(254,179,45)" fg:x="683" fg:w="1"/><text x="97.4050%" y="687.50"></text></g><g><title>`0x7FFD403401C3 (1 samples, 0.14%)</title><rect x="97.1550%" y="661" width="0.1422%" height="15" fill="rgb(226,14,10)" fg:x="683" fg:w="1"/><text x="97.4050%" y="671.50"></text></g><g><title>`0x7FFD402D1D3E (1 samples, 0.14%)</title><rect x="97.2973%" y="677" width="0.1422%" height="15" fill="rgb(244,27,41)" fg:x="684" fg:w="1"/><text x="97.5473%" y="687.50"></text></g><g><title>`0x7FFD40231532 (1 samples, 0.14%)</title><rect x="97.2973%" y="661" width="0.1422%" height="15" fill="rgb(235,35,32)" fg:x="684" fg:w="1"/><text x="97.5473%" y="671.50"></text></g><g><title>`0x7FFD40231A17 (1 samples, 0.14%)</title><rect x="97.2973%" y="645" width="0.1422%" height="15" fill="rgb(218,68,31)" fg:x="684" fg:w="1"/><text x="97.5473%" y="655.50"></text></g><g><title>`0x7FFD4022DBF9 (1 samples, 0.14%)</title><rect x="97.2973%" y="629" width="0.1422%" height="15" fill="rgb(207,120,37)" fg:x="684" fg:w="1"/><text x="97.5473%" y="639.50"></text></g><g><title>`0x7FFD40270CD5 (1 samples, 0.14%)</title><rect x="97.2973%" y="613" width="0.1422%" height="15" fill="rgb(227,98,0)" fg:x="684" fg:w="1"/><text x="97.5473%" y="623.50"></text></g><g><title>`0x7FFD40269C8E (1 samples, 0.14%)</title><rect x="97.2973%" y="597" width="0.1422%" height="15" fill="rgb(207,7,3)" fg:x="684" fg:w="1"/><text x="97.5473%" y="607.50"></text></g><g><title>`0x7FFD4033FAB4 (1 samples, 0.14%)</title><rect x="97.2973%" y="581" width="0.1422%" height="15" fill="rgb(206,98,19)" fg:x="684" fg:w="1"/><text x="97.5473%" y="591.50"></text></g><g><title>`0x7FFD402D1F13 (1 samples, 0.14%)</title><rect x="97.4395%" y="677" width="0.1422%" height="15" fill="rgb(217,5,26)" fg:x="685" fg:w="1"/><text x="97.6895%" y="687.50"></text></g><g><title>`0x7FFD40269643 (1 samples, 0.14%)</title><rect x="97.4395%" y="661" width="0.1422%" height="15" fill="rgb(235,190,38)" fg:x="685" fg:w="1"/><text x="97.6895%" y="671.50"></text></g><g><title>`0x7FFD4026A23B (1 samples, 0.14%)</title><rect x="97.4395%" y="645" width="0.1422%" height="15" fill="rgb(247,86,24)" fg:x="685" fg:w="1"/><text x="97.6895%" y="655.50"></text></g><g><title>`0x7FFD4026A68E (1 samples, 0.14%)</title><rect x="97.4395%" y="629" width="0.1422%" height="15" fill="rgb(205,101,16)" fg:x="685" fg:w="1"/><text x="97.6895%" y="639.50"></text></g><g><title>`0x7FFD40343164 (1 samples, 0.14%)</title><rect x="97.4395%" y="613" width="0.1422%" height="15" fill="rgb(246,168,33)" fg:x="685" fg:w="1"/><text x="97.6895%" y="623.50"></text></g><g><title>`0x7FFD402D2171 (1 samples, 0.14%)</title><rect x="97.5818%" y="677" width="0.1422%" height="15" fill="rgb(231,114,1)" fg:x="686" fg:w="1"/><text x="97.8318%" y="687.50"></text></g><g><title>`0x7FFD40341EC4 (1 samples, 0.14%)</title><rect x="97.5818%" y="661" width="0.1422%" height="15" fill="rgb(207,184,53)" fg:x="686" fg:w="1"/><text x="97.8318%" y="671.50"></text></g><g><title>`0x7FFD401E627E (1 samples, 0.14%)</title><rect x="97.7240%" y="565" width="0.1422%" height="15" fill="rgb(224,95,51)" fg:x="687" fg:w="1"/><text x="97.9740%" y="575.50"></text></g><g><title>`0x7FFD401E674A (1 samples, 0.14%)</title><rect x="97.7240%" y="549" width="0.1422%" height="15" fill="rgb(212,188,45)" fg:x="687" fg:w="1"/><text x="97.9740%" y="559.50"></text></g><g><title>`0x7FFD4033FCD4 (1 samples, 0.14%)</title><rect x="97.7240%" y="533" width="0.1422%" height="15" fill="rgb(223,154,38)" fg:x="687" fg:w="1"/><text x="97.9740%" y="543.50"></text></g><g><title>`0x7FFD4024064E (1 samples, 0.14%)</title><rect x="97.8663%" y="549" width="0.1422%" height="15" fill="rgb(251,22,52)" fg:x="688" fg:w="1"/><text x="98.1163%" y="559.50"></text></g><g><title>`0x7FFD40242DC9 (1 samples, 0.14%)</title><rect x="97.8663%" y="533" width="0.1422%" height="15" fill="rgb(229,209,22)" fg:x="688" fg:w="1"/><text x="98.1163%" y="543.50"></text></g><g><title>`0x7FFD4023F082 (3 samples, 0.43%)</title><rect x="97.7240%" y="613" width="0.4267%" height="15" fill="rgb(234,138,34)" fg:x="687" fg:w="3"/><text x="97.9740%" y="623.50"></text></g><g><title>`0x7FFD401FB0E7 (3 samples, 0.43%)</title><rect x="97.7240%" y="597" width="0.4267%" height="15" fill="rgb(212,95,11)" fg:x="687" fg:w="3"/><text x="97.9740%" y="607.50"></text></g><g><title>`0x7FFD4023CE01 (3 samples, 0.43%)</title><rect x="97.7240%" y="581" width="0.4267%" height="15" fill="rgb(240,179,47)" fg:x="687" fg:w="3"/><text x="97.9740%" y="591.50"></text></g><g><title>`0x7FFD401E63C9 (2 samples, 0.28%)</title><rect x="97.8663%" y="565" width="0.2845%" height="15" fill="rgb(240,163,11)" fg:x="688" fg:w="2"/><text x="98.1163%" y="575.50"></text></g><g><title>`0x7FFD402407C2 (1 samples, 0.14%)</title><rect x="98.0085%" y="549" width="0.1422%" height="15" fill="rgb(236,37,12)" fg:x="689" fg:w="1"/><text x="98.2585%" y="559.50"></text></g><g><title>`0x7FFD40248579 (1 samples, 0.14%)</title><rect x="98.0085%" y="533" width="0.1422%" height="15" fill="rgb(232,164,16)" fg:x="689" fg:w="1"/><text x="98.2585%" y="543.50"></text></g><g><title>`0x7FFD3D6A8CB1 (1 samples, 0.14%)</title><rect x="98.1508%" y="501" width="0.1422%" height="15" fill="rgb(244,205,15)" fg:x="690" fg:w="1"/><text x="98.4008%" y="511.50"></text></g><g><title>`0x7FFD402C4668 (1 samples, 0.14%)</title><rect x="98.1508%" y="485" width="0.1422%" height="15" fill="rgb(223,117,47)" fg:x="690" fg:w="1"/><text x="98.4008%" y="495.50"></text></g><g><title>`0x7FFD402C5078 (1 samples, 0.14%)</title><rect x="98.1508%" y="469" width="0.1422%" height="15" fill="rgb(244,107,35)" fg:x="690" fg:w="1"/><text x="98.4008%" y="479.50"></text></g><g><title>`0x7FFD40340C44 (1 samples, 0.14%)</title><rect x="98.1508%" y="453" width="0.1422%" height="15" fill="rgb(205,140,8)" fg:x="690" fg:w="1"/><text x="98.4008%" y="463.50"></text></g><g><title>`0x7FFD3D7842ED (2 samples, 0.28%)</title><rect x="98.1508%" y="517" width="0.2845%" height="15" fill="rgb(228,84,46)" fg:x="690" fg:w="2"/><text x="98.4008%" y="527.50"></text></g><g><title>`0x7FFD3D6A8EBE (1 samples, 0.14%)</title><rect x="98.2930%" y="501" width="0.1422%" height="15" fill="rgb(254,188,9)" fg:x="691" fg:w="1"/><text x="98.5430%" y="511.50"></text></g><g><title>`0x7FFD3D6A7648 (1 samples, 0.14%)</title><rect x="98.2930%" y="485" width="0.1422%" height="15" fill="rgb(206,112,54)" fg:x="691" fg:w="1"/><text x="98.5430%" y="495.50"></text></g><g><title>`0x7FFD3D6A6DC1 (1 samples, 0.14%)</title><rect x="98.2930%" y="469" width="0.1422%" height="15" fill="rgb(216,84,49)" fg:x="691" fg:w="1"/><text x="98.5430%" y="479.50"></text></g><g><title>`0x7FFD3D6A6A3E (1 samples, 0.14%)</title><rect x="98.2930%" y="453" width="0.1422%" height="15" fill="rgb(214,194,35)" fg:x="691" fg:w="1"/><text x="98.5430%" y="463.50"></text></g><g><title>`0x7FFD40341804 (1 samples, 0.14%)</title><rect x="98.2930%" y="437" width="0.1422%" height="15" fill="rgb(249,28,3)" fg:x="691" fg:w="1"/><text x="98.5430%" y="447.50"></text></g><g><title>`0x7FFD3D784351 (1 samples, 0.14%)</title><rect x="98.4353%" y="517" width="0.1422%" height="15" fill="rgb(222,56,52)" fg:x="692" fg:w="1"/><text x="98.6853%" y="527.50"></text></g><g><title>`0x7FFD3D716FCE (1 samples, 0.14%)</title><rect x="98.4353%" y="501" width="0.1422%" height="15" fill="rgb(245,217,50)" fg:x="692" fg:w="1"/><text x="98.6853%" y="511.50"></text></g><g><title>`0x7FFD3D7178BF (1 samples, 0.14%)</title><rect x="98.4353%" y="485" width="0.1422%" height="15" fill="rgb(213,201,24)" fg:x="692" fg:w="1"/><text x="98.6853%" y="495.50"></text></g><g><title>`0x7FFD3D7742E2 (1 samples, 0.14%)</title><rect x="98.4353%" y="469" width="0.1422%" height="15" fill="rgb(248,116,28)" fg:x="692" fg:w="1"/><text x="98.6853%" y="479.50"></text></g><g><title>`0x7FFD3D6D3BDF (1 samples, 0.14%)</title><rect x="98.4353%" y="453" width="0.1422%" height="15" fill="rgb(219,72,43)" fg:x="692" fg:w="1"/><text x="98.6853%" y="463.50"></text></g><g><title>`0x7FFD3D6B89A5 (1 samples, 0.14%)</title><rect x="98.4353%" y="437" width="0.1422%" height="15" fill="rgb(209,138,14)" fg:x="692" fg:w="1"/><text x="98.6853%" y="447.50"></text></g><g><title>`0x7FFD402C7347 (1 samples, 0.14%)</title><rect x="98.4353%" y="421" width="0.1422%" height="15" fill="rgb(222,18,33)" fg:x="692" fg:w="1"/><text x="98.6853%" y="431.50"></text></g><g><title>`0x7FFD402B7350 (7 samples, 1.00%)</title><rect x="97.7240%" y="661" width="0.9957%" height="15" fill="rgb(213,199,7)" fg:x="687" fg:w="7"/><text x="97.9740%" y="671.50"></text></g><g><title>`0x7FFD4024A650 (7 samples, 1.00%)</title><rect x="97.7240%" y="645" width="0.9957%" height="15" fill="rgb(250,110,10)" fg:x="687" fg:w="7"/><text x="97.9740%" y="655.50"></text></g><g><title>`0x7FFD4023ED20 (7 samples, 1.00%)</title><rect x="97.7240%" y="629" width="0.9957%" height="15" fill="rgb(248,123,6)" fg:x="687" fg:w="7"/><text x="97.9740%" y="639.50"></text></g><g><title>`0x7FFD4023F114 (4 samples, 0.57%)</title><rect x="98.1508%" y="613" width="0.5690%" height="15" fill="rgb(206,91,31)" fg:x="690" fg:w="4"/><text x="98.4008%" y="623.50"></text></g><g><title>`0x7FFD402A15C3 (4 samples, 0.57%)</title><rect x="98.1508%" y="597" width="0.5690%" height="15" fill="rgb(211,154,13)" fg:x="690" fg:w="4"/><text x="98.4008%" y="607.50"></text></g><g><title>`0x7FFD402A1906 (4 samples, 0.57%)</title><rect x="98.1508%" y="581" width="0.5690%" height="15" fill="rgb(225,148,7)" fg:x="690" fg:w="4"/><text x="98.4008%" y="591.50"></text></g><g><title>`0x7FFD402A18DA (4 samples, 0.57%)</title><rect x="98.1508%" y="565" width="0.5690%" height="15" fill="rgb(220,160,43)" fg:x="690" fg:w="4"/><text x="98.4008%" y="575.50"></text></g><g><title>`0x7FFD401F142C (4 samples, 0.57%)</title><rect x="98.1508%" y="549" width="0.5690%" height="15" fill="rgb(213,52,39)" fg:x="690" fg:w="4"/><text x="98.4008%" y="559.50"></text></g><g><title>`0x7FFD401F2080 (4 samples, 0.57%)</title><rect x="98.1508%" y="533" width="0.5690%" height="15" fill="rgb(243,137,7)" fg:x="690" fg:w="4"/><text x="98.4008%" y="543.50"></text></g><g><title>`0x7FFD3D78435F (1 samples, 0.14%)</title><rect x="98.5775%" y="517" width="0.1422%" height="15" fill="rgb(230,79,13)" fg:x="693" fg:w="1"/><text x="98.8275%" y="527.50"></text></g><g><title>`0x7FFD3D79AF80 (1 samples, 0.14%)</title><rect x="98.5775%" y="501" width="0.1422%" height="15" fill="rgb(247,105,23)" fg:x="693" fg:w="1"/><text x="98.8275%" y="511.50"></text></g><g><title>`0x7FFD402D2CBD (8 samples, 1.14%)</title><rect x="97.7240%" y="677" width="1.1380%" height="15" fill="rgb(223,179,41)" fg:x="687" fg:w="8"/><text x="97.9740%" y="687.50"></text></g><g><title>`0x7FFD402B73C5 (1 samples, 0.14%)</title><rect x="98.7198%" y="661" width="0.1422%" height="15" fill="rgb(218,9,34)" fg:x="694" fg:w="1"/><text x="98.9698%" y="671.50"></text></g><g><title>`0x7FFD401E7B48 (1 samples, 0.14%)</title><rect x="98.7198%" y="645" width="0.1422%" height="15" fill="rgb(222,106,8)" fg:x="694" fg:w="1"/><text x="98.9698%" y="655.50"></text></g><g><title>`0x7FFD401EA92B (1 samples, 0.14%)</title><rect x="98.7198%" y="629" width="0.1422%" height="15" fill="rgb(211,220,0)" fg:x="694" fg:w="1"/><text x="98.9698%" y="639.50"></text></g><g><title>`0x7FFD401EAAF6 (1 samples, 0.14%)</title><rect x="98.7198%" y="613" width="0.1422%" height="15" fill="rgb(229,52,16)" fg:x="694" fg:w="1"/><text x="98.9698%" y="623.50"></text></g><g><title>`0x7FFD401EA2F3 (1 samples, 0.14%)</title><rect x="98.7198%" y="597" width="0.1422%" height="15" fill="rgb(212,155,18)" fg:x="694" fg:w="1"/><text x="98.9698%" y="607.50"></text></g><g><title>`0x7FFD4023F696 (1 samples, 0.14%)</title><rect x="98.7198%" y="581" width="0.1422%" height="15" fill="rgb(242,21,14)" fg:x="694" fg:w="1"/><text x="98.9698%" y="591.50"></text></g><g><title>`0x7FFD4023EF14 (1 samples, 0.14%)</title><rect x="98.7198%" y="565" width="0.1422%" height="15" fill="rgb(222,19,48)" fg:x="694" fg:w="1"/><text x="98.9698%" y="575.50"></text></g><g><title>`0x7FFD401F9376 (1 samples, 0.14%)</title><rect x="98.7198%" y="549" width="0.1422%" height="15" fill="rgb(232,45,27)" fg:x="694" fg:w="1"/><text x="98.9698%" y="559.50"></text></g><g><title>`0x7FFD401F97D9 (1 samples, 0.14%)</title><rect x="98.7198%" y="533" width="0.1422%" height="15" fill="rgb(249,103,42)" fg:x="694" fg:w="1"/><text x="98.9698%" y="543.50"></text></g><g><title>`0x7FFD40305211 (1 samples, 0.14%)</title><rect x="98.7198%" y="517" width="0.1422%" height="15" fill="rgb(246,81,33)" fg:x="694" fg:w="1"/><text x="98.9698%" y="527.50"></text></g><g><title>`0x7FFD40305298 (1 samples, 0.14%)</title><rect x="98.7198%" y="501" width="0.1422%" height="15" fill="rgb(252,33,42)" fg:x="694" fg:w="1"/><text x="98.9698%" y="511.50"></text></g><g><title>`0x7FFD4030BCCF (1 samples, 0.14%)</title><rect x="98.7198%" y="485" width="0.1422%" height="15" fill="rgb(209,212,41)" fg:x="694" fg:w="1"/><text x="98.9698%" y="495.50"></text></g><g><title>`0x7FFD4030EAD9 (1 samples, 0.14%)</title><rect x="98.7198%" y="469" width="0.1422%" height="15" fill="rgb(207,154,6)" fg:x="694" fg:w="1"/><text x="98.9698%" y="479.50"></text></g><g><title>`0x7FFD402B6B55 (1 samples, 0.14%)</title><rect x="98.7198%" y="453" width="0.1422%" height="15" fill="rgb(223,64,47)" fg:x="694" fg:w="1"/><text x="98.9698%" y="463.50"></text></g><g><title>`0x7FFD401E627E (1 samples, 0.14%)</title><rect x="98.8620%" y="549" width="0.1422%" height="15" fill="rgb(211,161,38)" fg:x="695" fg:w="1"/><text x="99.1120%" y="559.50"></text></g><g><title>`0x7FFD401E674A (1 samples, 0.14%)</title><rect x="98.8620%" y="533" width="0.1422%" height="15" fill="rgb(219,138,40)" fg:x="695" fg:w="1"/><text x="99.1120%" y="543.50"></text></g><g><title>`0x7FFD4033FCD4 (1 samples, 0.14%)</title><rect x="98.8620%" y="517" width="0.1422%" height="15" fill="rgb(241,228,46)" fg:x="695" fg:w="1"/><text x="99.1120%" y="527.50"></text></g><g><title>`0x7FFD4024239C (2 samples, 0.28%)</title><rect x="98.8620%" y="645" width="0.2845%" height="15" fill="rgb(223,209,38)" fg:x="695" fg:w="2"/><text x="99.1120%" y="655.50"></text></g><g><title>`0x7FFD4023CE01 (2 samples, 0.28%)</title><rect x="98.8620%" y="629" width="0.2845%" height="15" fill="rgb(236,164,45)" fg:x="695" fg:w="2"/><text x="99.1120%" y="639.50"></text></g><g><title>`0x7FFD401E63C9 (2 samples, 0.28%)</title><rect x="98.8620%" y="613" width="0.2845%" height="15" fill="rgb(231,15,5)" fg:x="695" fg:w="2"/><text x="99.1120%" y="623.50"></text></g><g><title>`0x7FFD4024064E (2 samples, 0.28%)</title><rect x="98.8620%" y="597" width="0.2845%" height="15" fill="rgb(252,35,15)" fg:x="695" fg:w="2"/><text x="99.1120%" y="607.50"></text></g><g><title>`0x7FFD4024239C (2 samples, 0.28%)</title><rect x="98.8620%" y="581" width="0.2845%" height="15" fill="rgb(248,181,18)" fg:x="695" fg:w="2"/><text x="99.1120%" y="591.50"></text></g><g><title>`0x7FFD4023CE01 (2 samples, 0.28%)</title><rect x="98.8620%" y="565" width="0.2845%" height="15" fill="rgb(233,39,42)" fg:x="695" fg:w="2"/><text x="99.1120%" y="575.50"></text></g><g><title>`0x7FFD401E63C9 (1 samples, 0.14%)</title><rect x="99.0043%" y="549" width="0.1422%" height="15" fill="rgb(238,110,33)" fg:x="696" fg:w="1"/><text x="99.2543%" y="559.50"></text></g><g><title>`0x7FFD4024064E (1 samples, 0.14%)</title><rect x="99.0043%" y="533" width="0.1422%" height="15" fill="rgb(233,195,10)" fg:x="696" fg:w="1"/><text x="99.2543%" y="543.50"></text></g><g><title>`0x7FFD40241AC2 (1 samples, 0.14%)</title><rect x="99.0043%" y="517" width="0.1422%" height="15" fill="rgb(254,105,3)" fg:x="696" fg:w="1"/><text x="99.2543%" y="527.50"></text></g><g><title>`0x7FFD402D2DB1 (3 samples, 0.43%)</title><rect x="98.8620%" y="677" width="0.4267%" height="15" fill="rgb(221,225,9)" fg:x="695" fg:w="3"/><text x="99.1120%" y="687.50"></text></g><g><title>`0x7FFD4024064E (3 samples, 0.43%)</title><rect x="98.8620%" y="661" width="0.4267%" height="15" fill="rgb(224,227,45)" fg:x="695" fg:w="3"/><text x="99.1120%" y="671.50"></text></g><g><title>`0x7FFD40242435 (1 samples, 0.14%)</title><rect x="99.1465%" y="645" width="0.1422%" height="15" fill="rgb(229,198,43)" fg:x="697" fg:w="1"/><text x="99.3965%" y="655.50"></text></g><g><title>`0x7FFD40276C0E (1 samples, 0.14%)</title><rect x="99.1465%" y="629" width="0.1422%" height="15" fill="rgb(206,209,35)" fg:x="697" fg:w="1"/><text x="99.3965%" y="639.50"></text></g><g><title>`0x7FFD40254DF3 (1 samples, 0.14%)</title><rect x="99.1465%" y="613" width="0.1422%" height="15" fill="rgb(245,195,53)" fg:x="697" fg:w="1"/><text x="99.3965%" y="623.50"></text></g><g><title>`0x7FFD40342784 (1 samples, 0.14%)</title><rect x="99.1465%" y="597" width="0.1422%" height="15" fill="rgb(240,92,26)" fg:x="697" fg:w="1"/><text x="99.3965%" y="607.50"></text></g><g><title>`0x7FFD402D2DB8 (1 samples, 0.14%)</title><rect x="99.2888%" y="677" width="0.1422%" height="15" fill="rgb(207,40,23)" fg:x="698" fg:w="1"/><text x="99.5388%" y="687.50"></text></g><g><title>`0x7FFD4023A227 (1 samples, 0.14%)</title><rect x="99.2888%" y="661" width="0.1422%" height="15" fill="rgb(223,111,35)" fg:x="698" fg:w="1"/><text x="99.5388%" y="671.50"></text></g><g><title>`0x7FFD4023A3A1 (1 samples, 0.14%)</title><rect x="99.2888%" y="645" width="0.1422%" height="15" fill="rgb(229,147,28)" fg:x="698" fg:w="1"/><text x="99.5388%" y="655.50"></text></g><g><title>`0x7FFD40248546 (1 samples, 0.14%)</title><rect x="99.2888%" y="629" width="0.1422%" height="15" fill="rgb(211,29,28)" fg:x="698" fg:w="1"/><text x="99.5388%" y="639.50"></text></g><g><title>`0x7FFD402A18DA (1 samples, 0.14%)</title><rect x="99.4310%" y="645" width="0.1422%" height="15" fill="rgb(228,72,33)" fg:x="699" fg:w="1"/><text x="99.6810%" y="655.50"></text></g><g><title>`0x7FFD401F142C (1 samples, 0.14%)</title><rect x="99.4310%" y="629" width="0.1422%" height="15" fill="rgb(205,214,31)" fg:x="699" fg:w="1"/><text x="99.6810%" y="639.50"></text></g><g><title>`0x7FFD401F2080 (1 samples, 0.14%)</title><rect x="99.4310%" y="613" width="0.1422%" height="15" fill="rgb(224,111,15)" fg:x="699" fg:w="1"/><text x="99.6810%" y="623.50"></text></g><g><title>`0x7FFD3CC9277E (1 samples, 0.14%)</title><rect x="99.4310%" y="597" width="0.1422%" height="15" fill="rgb(253,21,26)" fg:x="699" fg:w="1"/><text x="99.6810%" y="607.50"></text></g><g><title>`0x7FFD3CC927F5 (1 samples, 0.14%)</title><rect x="99.4310%" y="581" width="0.1422%" height="15" fill="rgb(245,139,43)" fg:x="699" fg:w="1"/><text x="99.6810%" y="591.50"></text></g><g><title>`0x7FFD3CC9289B (1 samples, 0.14%)</title><rect x="99.4310%" y="565" width="0.1422%" height="15" fill="rgb(252,170,7)" fg:x="699" fg:w="1"/><text x="99.6810%" y="575.50"></text></g><g><title>`0x7FFD4033FE34 (1 samples, 0.14%)</title><rect x="99.4310%" y="549" width="0.1422%" height="15" fill="rgb(231,118,14)" fg:x="699" fg:w="1"/><text x="99.6810%" y="559.50"></text></g><g><title>`0x7FFD3DAD6E0D (1 samples, 0.14%)</title><rect x="99.5733%" y="581" width="0.1422%" height="15" fill="rgb(238,83,0)" fg:x="700" fg:w="1"/><text x="99.8233%" y="591.50"></text></g><g><title>`0x7FFD3DB72AE6 (1 samples, 0.14%)</title><rect x="99.5733%" y="565" width="0.1422%" height="15" fill="rgb(221,39,39)" fg:x="700" fg:w="1"/><text x="99.8233%" y="575.50"></text></g><g><title>`0x7FFD3DB7311C (1 samples, 0.14%)</title><rect x="99.5733%" y="549" width="0.1422%" height="15" fill="rgb(222,119,46)" fg:x="700" fg:w="1"/><text x="99.8233%" y="559.50"></text></g><g><title>`0x7FFD3DB73492 (1 samples, 0.14%)</title><rect x="99.5733%" y="533" width="0.1422%" height="15" fill="rgb(222,165,49)" fg:x="700" fg:w="1"/><text x="99.8233%" y="543.50"></text></g><g><title>`0x7FFD3DB73253 (1 samples, 0.14%)</title><rect x="99.5733%" y="517" width="0.1422%" height="15" fill="rgb(219,113,52)" fg:x="700" fg:w="1"/><text x="99.8233%" y="527.50"></text></g><g><title>`0x7FFD3D6722C6 (1 samples, 0.14%)</title><rect x="99.5733%" y="501" width="0.1422%" height="15" fill="rgb(214,7,15)" fg:x="700" fg:w="1"/><text x="99.8233%" y="511.50"></text></g><g><title>`0x7FFD4024A5E6 (1 samples, 0.14%)</title><rect x="99.5733%" y="485" width="0.1422%" height="15" fill="rgb(235,32,4)" fg:x="700" fg:w="1"/><text x="99.8233%" y="495.50"></text></g><g><title>`0x7FFD401F93A7 (1 samples, 0.14%)</title><rect x="99.5733%" y="469" width="0.1422%" height="15" fill="rgb(238,90,54)" fg:x="700" fg:w="1"/><text x="99.8233%" y="479.50"></text></g><g><title>`0x7FFD40305131 (1 samples, 0.14%)</title><rect x="99.5733%" y="453" width="0.1422%" height="15" fill="rgb(213,208,19)" fg:x="700" fg:w="1"/><text x="99.8233%" y="463.50"></text></g><g><title>`0x7FFD403051A8 (1 samples, 0.14%)</title><rect x="99.5733%" y="437" width="0.1422%" height="15" fill="rgb(233,156,4)" fg:x="700" fg:w="1"/><text x="99.8233%" y="447.50"></text></g><g><title>`0x7FFD4030B2F1 (1 samples, 0.14%)</title><rect x="99.5733%" y="421" width="0.1422%" height="15" fill="rgb(207,194,5)" fg:x="700" fg:w="1"/><text x="99.8233%" y="431.50"></text></g><g><title>`0x7FFD4030EA34 (1 samples, 0.14%)</title><rect x="99.5733%" y="405" width="0.1422%" height="15" fill="rgb(206,111,30)" fg:x="700" fg:w="1"/><text x="99.8233%" y="415.50"></text></g><g><title>`0x7FFD3F087A77 (1 samples, 0.14%)</title><rect x="99.7155%" y="581" width="0.1422%" height="15" fill="rgb(243,70,54)" fg:x="701" fg:w="1"/><text x="99.9655%" y="591.50"></text></g><g><title>`0x7FFD3F087D85 (1 samples, 0.14%)</title><rect x="99.7155%" y="565" width="0.1422%" height="15" fill="rgb(242,28,8)" fg:x="701" fg:w="1"/><text x="99.9655%" y="575.50"></text></g><g><title>`0x7FFD3F09D0E8 (1 samples, 0.14%)</title><rect x="99.7155%" y="549" width="0.1422%" height="15" fill="rgb(219,106,18)" fg:x="701" fg:w="1"/><text x="99.9655%" y="559.50"></text></g><g><title>`0x7FFD3D75783B (1 samples, 0.14%)</title><rect x="99.7155%" y="533" width="0.1422%" height="15" fill="rgb(244,222,10)" fg:x="701" fg:w="1"/><text x="99.9655%" y="543.50"></text></g><g><title>`0x7FFD401EDFA2 (1 samples, 0.14%)</title><rect x="99.7155%" y="517" width="0.1422%" height="15" fill="rgb(236,179,52)" fg:x="701" fg:w="1"/><text x="99.9655%" y="527.50"></text></g><g><title>`0x7FFD401ED00A (1 samples, 0.14%)</title><rect x="99.7155%" y="501" width="0.1422%" height="15" fill="rgb(213,23,39)" fg:x="701" fg:w="1"/><text x="99.9655%" y="511.50"></text></g><g><title>`0x7FFD4022813F (1 samples, 0.14%)</title><rect x="99.7155%" y="485" width="0.1422%" height="15" fill="rgb(238,48,10)" fg:x="701" fg:w="1"/><text x="99.9655%" y="495.50"></text></g><g><title>`0x7FFD4033FB94 (1 samples, 0.14%)</title><rect x="99.7155%" y="469" width="0.1422%" height="15" fill="rgb(251,196,23)" fg:x="701" fg:w="1"/><text x="99.9655%" y="479.50"></text></g><g><title>all (703 samples, 100%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(250,152,24)" fg:x="0" fg:w="703"/><text x="0.2500%" y="751.50"></text></g><g><title>`0x7FFD402D33CE (20 samples, 2.84%)</title><rect x="97.1550%" y="725" width="2.8450%" height="15" fill="rgb(209,150,17)" fg:x="683" fg:w="20"/><text x="97.4050%" y="735.50">`0..</text></g><g><title>`0x7FFD402FE9E3 (19 samples, 2.70%)</title><rect x="97.2973%" y="709" width="2.7027%" height="15" fill="rgb(234,202,34)" fg:x="684" fg:w="19"/><text x="97.5473%" y="719.50">`0..</text></g><g><title>`0x7FFD402D10B8 (19 samples, 2.70%)</title><rect x="97.2973%" y="693" width="2.7027%" height="15" fill="rgb(253,148,53)" fg:x="684" fg:w="19"/><text x="97.5473%" y="703.50">`0..</text></g><g><title>`0x7FFD402D2EC1 (4 samples, 0.57%)</title><rect x="99.4310%" y="677" width="0.5690%" height="15" fill="rgb(218,129,16)" fg:x="699" fg:w="4"/><text x="99.6810%" y="687.50"></text></g><g><title>`0x7FFD402A1906 (4 samples, 0.57%)</title><rect x="99.4310%" y="661" width="0.5690%" height="15" fill="rgb(216,85,19)" fg:x="699" fg:w="4"/><text x="99.6810%" y="671.50"></text></g><g><title>`0x7FFD402A1906 (3 samples, 0.43%)</title><rect x="99.5733%" y="645" width="0.4267%" height="15" fill="rgb(235,228,7)" fg:x="700" fg:w="3"/><text x="99.8233%" y="655.50"></text></g><g><title>`0x7FFD402A18DA (3 samples, 0.43%)</title><rect x="99.5733%" y="629" width="0.4267%" height="15" fill="rgb(245,175,0)" fg:x="700" fg:w="3"/><text x="99.8233%" y="639.50"></text></g><g><title>`0x7FFD401F142C (3 samples, 0.43%)</title><rect x="99.5733%" y="613" width="0.4267%" height="15" fill="rgb(208,168,36)" fg:x="700" fg:w="3"/><text x="99.8233%" y="623.50"></text></g><g><title>`0x7FFD401F2080 (3 samples, 0.43%)</title><rect x="99.5733%" y="597" width="0.4267%" height="15" fill="rgb(246,171,24)" fg:x="700" fg:w="3"/><text x="99.8233%" y="607.50"></text></g><g><title>`0x7FFD3F087ACF (1 samples, 0.14%)</title><rect x="99.8578%" y="581" width="0.1422%" height="15" fill="rgb(215,142,24)" fg:x="702" fg:w="1"/><text x="100.1078%" y="591.50"></text></g><g><title>`0x7FFD3F0BE3DA (1 samples, 0.14%)</title><rect x="99.8578%" y="565" width="0.1422%" height="15" fill="rgb(250,187,7)" fg:x="702" fg:w="1"/><text x="100.1078%" y="575.50"></text></g><g><title>`0x7FFD3F0C0FEB (1 samples, 0.14%)</title><rect x="99.8578%" y="549" width="0.1422%" height="15" fill="rgb(228,66,33)" fg:x="702" fg:w="1"/><text x="100.1078%" y="559.50"></text></g><g><title>`0x7FFD3F09D836 (1 samples, 0.14%)</title><rect x="99.8578%" y="533" width="0.1422%" height="15" fill="rgb(234,215,21)" fg:x="702" fg:w="1"/><text x="100.1078%" y="543.50"></text></g><g><title>`0x7FFD3F09DA79 (1 samples, 0.14%)</title><rect x="99.8578%" y="517" width="0.1422%" height="15" fill="rgb(222,191,20)" fg:x="702" fg:w="1"/><text x="100.1078%" y="527.50"></text></g><g><title>`0x7FFD401FBE86 (1 samples, 0.14%)</title><rect x="99.8578%" y="501" width="0.1422%" height="15" fill="rgb(245,79,54)" fg:x="702" fg:w="1"/><text x="100.1078%" y="511.50"></text></g><g><title>`0x7FFD401FC20E (1 samples, 0.14%)</title><rect x="99.8578%" y="485" width="0.1422%" height="15" fill="rgb(240,10,37)" fg:x="702" fg:w="1"/><text x="100.1078%" y="495.50"></text></g><g><title>`0x7FFD4022A780 (1 samples, 0.14%)</title><rect x="99.8578%" y="469" width="0.1422%" height="15" fill="rgb(214,192,32)" fg:x="702" fg:w="1"/><text x="100.1078%" y="479.50"></text></g><g><title>`0x7FFD4022BCAF (1 samples, 0.14%)</title><rect x="99.8578%" y="453" width="0.1422%" height="15" fill="rgb(209,36,54)" fg:x="702" fg:w="1"/><text x="100.1078%" y="463.50"></text></g><g><title>`0x7FFD4022C624 (1 samples, 0.14%)</title><rect x="99.8578%" y="437" width="0.1422%" height="15" fill="rgb(220,10,11)" fg:x="702" fg:w="1"/><text x="100.1078%" y="447.50"></text></g><g><title>`0x7FFD4022C15A (1 samples, 0.14%)</title><rect x="99.8578%" y="421" width="0.1422%" height="15" fill="rgb(221,106,17)" fg:x="702" fg:w="1"/><text x="100.1078%" y="431.50"></text></g></svg></svg>